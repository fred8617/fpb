{"version":3,"sources":["../src/FPB/GraphqlEditor.tsx"],"names":["create","Item","GraphqlEditor","props","client","ref","footerRef","store","visible","setVisible","setTimeout","minuHeight","current","clientHeight","_","value","getQueryEditor","getValue","onChange","padding","getItem","setItem","param","query"],"mappings":"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","sourcesContent":["import React, { SFC, useRef, useEffect } from 'react';\r\nimport GraphiQL from 'graphiql';\r\nimport 'graphiql/graphiql.css';\r\nimport { useApolloClient } from '@apollo/react-hooks';\r\nimport gql from 'graphql-tag';\r\nimport FullScreenModal from './FullScreenModal';\r\nimport { printSchema } from 'graphql';\r\nimport { useLocalStore, Observer } from 'mobx-react-lite';\r\nimport { Button, Form } from 'antd';\r\nimport { doWindowResize } from './utils';\r\nimport ErrorWrapper from './ErrorWrapper';\r\ninterface GraphqlEditorProps {\r\n  onChange?(e);\r\n  value?;\r\n}\r\nconst { create, Item } = Form;\r\nconst GraphqlEditor: SFC<GraphqlEditorProps> = props => {\r\n  const client = useApolloClient();\r\n  const ref = useRef();\r\n  const footerRef: any = useRef();\r\n  const store = useLocalStore(() => ({\r\n    visible: false,\r\n    setVisible(visible) {\r\n      store.visible = visible;\r\n      if (visible) {\r\n        setTimeout(() => {\r\n          store.minuHeight = footerRef.current.clientHeight + 21;\r\n          doWindowResize();\r\n        }, 200);\r\n      }\r\n    },\r\n    minuHeight: 0,\r\n  }));\r\n  useEffect(() => {\r\n    console.log(ref);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <style>\r\n        {`\r\n        \r\n        .graphiql-container .doc-explorer-title, .graphiql-container .history-title{\r\n            padding: 0px;\r\n            height: 34px;\r\n            line-height: 34px;\r\n        }\r\n        `}\r\n      </style>\r\n      <Button onClick={_ => store.setVisible(true)}>Graphql编辑器</Button>\r\n      <Observer>\r\n        {() => (\r\n          <FullScreenModal\r\n            minuHeight={store.minuHeight}\r\n            closable={false}\r\n            onOk={() => {}}\r\n            destroyOnClose\r\n            footer={\r\n              <div ref={footerRef}>\r\n                <Form layout=\"inline\">\r\n                  <Item>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      onClick={_ => {\r\n                        const value = (ref.current as any)\r\n                          .getQueryEditor()\r\n                          .getValue();\r\n                        if (props.onChange) {\r\n                          props.onChange(value);\r\n                        }\r\n                      }}\r\n                    >\r\n                      保存\r\n                    </Button>\r\n                  </Item>\r\n                  <Item>\r\n                    <Button\r\n                      type=\"danger\"\r\n                      onClick={_ => {\r\n                        const value = (ref.current as any)\r\n                          .getQueryEditor()\r\n                          .getValue();\r\n                        if (props.onChange) {\r\n                          props.onChange(value);\r\n                        }\r\n                        store.setVisible(false);\r\n                      }}\r\n                    >\r\n                      保存并关闭\r\n                    </Button>\r\n                  </Item>\r\n                  <Item>\r\n                    <Button\r\n                      onClick={_ => {\r\n                        store.setVisible(false);\r\n                      }}\r\n                    >\r\n                      关闭\r\n                    </Button>\r\n                  </Item>\r\n                </Form>\r\n              </div>\r\n            }\r\n            onCancel={_ => store.setVisible(false)}\r\n            visible={store.visible}\r\n            bodyStyle={{ padding: 0 }}\r\n          >\r\n            {store.visible && (\r\n              <ErrorWrapper>\r\n                {() => (\r\n                  <GraphiQL\r\n                    query={props.value}\r\n                    ref={ref}\r\n                    // response={`{a:1}`}\r\n                    //   query={null}\r\n                    storage={{ getItem() {}, setItem() {} }}\r\n                    operationName={'query'}\r\n                    fetcher={param => client.query({ query: gql(param.query) })}\r\n                  >\r\n                    <GraphiQL.Logo>FPB Graphiql</GraphiQL.Logo>\r\n                  </GraphiQL>\r\n                )}\r\n              </ErrorWrapper>\r\n            )}\r\n          </FullScreenModal>\r\n        )}\r\n      </Observer>\r\n    </>\r\n  );\r\n};\r\nexport { GraphqlEditor as default };\r\n"],"file":"GraphqlEditor.js"}