{"version":3,"sources":["../src/FPB/FPBForm.tsx"],"names":["create","Item","FPBForm","props","ref","footerRef","store","visible","setVisible","setTimeout","minuHeight","current","clientHeight","onChange","config","components","value"],"mappings":"4mCAQQA,CAAAA,M,eAAAA,M,CAAQC,I,eAAAA,I,CAMVC,OAA0B,CAAG,SAAAC,CAAK,CAAI,IACpCC,CAAAA,CAAQ,CAAG,mBADyB,CAEpCC,CAAc,CAAG,mBAFmB,CAGpCC,CAAK,CAAG,iCAAc,iBAAO,CACjCC,OAAO,GAD0B,CAEjCC,UAFiC,qBAEtBD,CAFsB,CAEb,CAClBD,CAAK,CAACC,OAAN,CAAgBA,CADE,CAEdA,CAFc,EAGhBE,UAAU,CAAC,UAAM,CACfH,CAAK,CAACI,UAAN,CAAmBL,CAAS,CAACM,OAAV,CAAkBC,YAAlB,CAAiC,EACrD,CAFS,CAEP,CAFO,CAIb,CATgC,CAUjCF,UAAU,CAAE,CAVqB,CAAP,CAAd,CAH4B,CAe1C,MACE,2DACE,8CAAQ,OAAO,CAAE,yBAAKJ,CAAAA,CAAK,CAACE,UAAN,IAAL,CAAjB,iBADF,CAEE,6BAAC,uBAAD,MACG,iBACC,8BAAC,wBAAD,EACE,UAAU,CAAEF,CAAK,CAACI,UADpB,CAEE,IAAI,CAAE,eAAK,CAELP,CAAK,CAACU,QAFD,EAGPV,CAAK,CAACU,QAAN,CAAeT,CAAG,CAACO,OAAJ,CAAYG,MAA3B,CAEH,CAPH,CAQE,cAAc,GARhB,CASE,MAAM,CACJ,oCAAK,GAAG,CAAET,CAAV,EACE,4CAAM,MAAM,CAAC,QAAb,EACE,6BAAC,IAAD,MACE,8CACE,IAAI,CAAC,SADP,CAEE,OAAO,CAAE,kBAAK,CAERF,CAAK,CAACU,QAFE,EAGVV,CAAK,CAACU,QAAN,CAAeT,CAAG,CAACO,OAAJ,CAAYG,MAA3B,CAEH,CAPH,iBADF,CADF,CAcE,6BAAC,IAAD,MACE,8CACE,IAAI,CAAC,QADP,CAEE,OAAO,CAAE,kBAAK,CAERX,CAAK,CAACU,QAFE,EAGVV,CAAK,CAACU,QAAN,CAAeT,CAAG,CAACO,OAAJ,CAAYG,MAA3B,CAHU,CAKZR,CAAK,CAACE,UAAN,IACD,CARH,mCADF,CAdF,CADF,CAVJ,CA0CE,QAAQ,CAAE,0BAAKF,CAAAA,CAAK,CAACE,UAAN,IAAL,CA1CZ,CA2CE,OAAO,CAAEF,CAAK,CAACC,OA3CjB,EA6CGD,CAAK,CAACC,OAAN,EACC,6BAAC,YAAD,EACE,WAAW,CAAE,GADf,CAEE,UAAU,CAAEH,CAFd,CAGE,UAAU,CAAED,CAAK,CAACY,UAHpB,CAIE,YAAY,CAAEZ,CAAK,CAACa,KAJtB,EA9CJ,CADD,CADH,CAFF,CA8DH,C,UAEcd,O","sourcesContent":["import React, { SFC, useRef, useEffect } from 'react';\r\nimport { Form, Button } from 'antd';\r\nimport FullScreenModal from './FullScreenModal';\r\nimport FPB from './FPB';\r\nimport { ComponentType } from './useFPBStore';\r\nimport { FormComponentProps } from 'antd/lib/form';\r\nimport { useLocalStore, Observer } from 'mobx-react-lite';\r\nimport { doWindowResize } from './utils';\r\nconst { create, Item } = Form;\r\ninterface FPBFormProps {\r\n  components: ComponentType[];\r\n  onChange?(e);\r\n  value?;\r\n}\r\nconst FPBForm: SFC<FPBFormProps> = props => {\r\n  const ref: any = useRef();\r\n  const footerRef: any = useRef();\r\n  const store = useLocalStore(() => ({\r\n    visible: false,\r\n    setVisible(visible) {\r\n      store.visible = visible;\r\n      if (visible) {\r\n        setTimeout(() => {\r\n          store.minuHeight = footerRef.current.clientHeight + 21;\r\n        }, 0);\r\n      }\r\n    },\r\n    minuHeight: 0,\r\n  }));\r\n  return (\r\n    <>\r\n      <Button onClick={_ => store.setVisible(true)}>设计</Button>\r\n      <Observer>\r\n        {() => (\r\n          <FullScreenModal\r\n            minuHeight={store.minuHeight}\r\n            onOk={_ => {\r\n              //   ref.current.config;\r\n              if (props.onChange) {\r\n                props.onChange(ref.current.config);\r\n              }\r\n            }}\r\n            destroyOnClose\r\n            footer={\r\n              <div ref={footerRef}>\r\n                <Form layout=\"inline\">\r\n                  <Item>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      onClick={_ => {\r\n                        //   ref.current.config;\r\n                        if (props.onChange) {\r\n                          props.onChange(ref.current.config);\r\n                        }\r\n                      }}\r\n                    >\r\n                      保存\r\n                    </Button>\r\n                  </Item>\r\n                  <Item>\r\n                    <Button\r\n                      type=\"danger\"\r\n                      onClick={_ => {\r\n                        //   ref.current.config;\r\n                        if (props.onChange) {\r\n                          props.onChange(ref.current.config);\r\n                        }\r\n                        store.setVisible(false);\r\n                      }}\r\n                    >\r\n                      保存并关闭\r\n                    </Button>\r\n                  </Item>\r\n                </Form>\r\n              </div>\r\n            }\r\n            onCancel={_ => store.setVisible(false)}\r\n            visible={store.visible}\r\n          >\r\n            {store.visible && (\r\n              <FPB\r\n                renderDelay={200}\r\n                forwardRef={ref}\r\n                components={props.components}\r\n                defaultDatas={props.value}\r\n              />\r\n            )}\r\n          </FullScreenModal>\r\n        )}\r\n      </Observer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FPBForm;\r\n"],"file":"FPBForm.js"}