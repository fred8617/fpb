{"version":3,"sources":["../src/FPB/FPBForm.tsx"],"names":["create","Item","FPBForm","props","ref","footerRef","store","visible","setVisible","setTimeout","minuHeight","current","clientHeight","_","onChange","config","components","value"],"mappings":";;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AAGA;;;;;;;;IAEQA,M,iBAAAA,M;IAAQC,I,iBAAAA,I;;AAMhB,IAAMC,OAA0B,GAAG,SAA7BA,OAA6B,CAAAC,KAAK,EAAI;AAC1C,MAAMC,GAAQ,GAAG,oBAAjB;AACA,MAAMC,SAAc,GAAG,oBAAvB;AACA,MAAMC,KAAK,GAAG,kCAAc;AAAA,WAAO;AACjCC,MAAAA,OAAO,EAAE,KADwB;AAEjCC,MAAAA,UAFiC,sBAEtBD,OAFsB,EAEb;AAClBD,QAAAA,KAAK,CAACC,OAAN,GAAgBA,OAAhB;;AACA,YAAIA,OAAJ,EAAa;AACXE,UAAAA,UAAU,CAAC,YAAM;AACfH,YAAAA,KAAK,CAACI,UAAN,GAAmBL,SAAS,CAACM,OAAV,CAAkBC,YAAlB,GAAiC,EAApD;AACD,WAFS,EAEP,CAFO,CAAV;AAGD;AACF,OATgC;AAUjCF,MAAAA,UAAU,EAAE;AAVqB,KAAP;AAAA,GAAd,CAAd;AAYA,SACE,4DACE;AAAQ,IAAA,OAAO,EAAE,iBAAAG,CAAC;AAAA,aAAIP,KAAK,CAACE,UAAN,CAAiB,IAAjB,CAAJ;AAAA;AAAlB,oBADF,EAEE,6BAAC,uBAAD,QACG;AAAA,WACC,6BAAC,wBAAD;AACE,MAAA,UAAU,EAAEF,KAAK,CAACI,UADpB;AAEE,MAAA,IAAI,EAAE,cAAAG,CAAC,EAAI;AACT;AACA,YAAIV,KAAK,CAACW,QAAV,EAAoB;AAClBX,UAAAA,KAAK,CAACW,QAAN,CAAeV,GAAG,CAACO,OAAJ,CAAYI,MAA3B;AACD;AACF,OAPH;AAQE,MAAA,cAAc,MARhB;AASE,MAAA,MAAM,EACJ;AAAK,QAAA,GAAG,EAAEV;AAAV,SACE;AAAM,QAAA,MAAM,EAAC;AAAb,SACE,6BAAC,IAAD,QACE;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,OAAO,EAAE,iBAAAQ,CAAC,EAAI;AACZ;AACA,cAAIV,KAAK,CAACW,QAAV,EAAoB;AAClBX,YAAAA,KAAK,CAACW,QAAN,CAAeV,GAAG,CAACO,OAAJ,CAAYI,MAA3B;AACD;AACF;AAPH,wBADF,CADF,EAcE,6BAAC,IAAD,QACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAE,iBAAAF,CAAC,EAAI;AACZ;AACA,cAAIV,KAAK,CAACW,QAAV,EAAoB;AAClBX,YAAAA,KAAK,CAACW,QAAN,CAAeV,GAAG,CAACO,OAAJ,CAAYI,MAA3B;AACD;;AACDT,UAAAA,KAAK,CAACE,UAAN,CAAiB,KAAjB;AACD;AARH,0CADF,CAdF,CADF,CAVJ;AA0CE,MAAA,QAAQ,EAAE,kBAAAK,CAAC;AAAA,eAAIP,KAAK,CAACE,UAAN,CAAiB,KAAjB,CAAJ;AAAA,OA1Cb;AA2CE,MAAA,OAAO,EAAEF,KAAK,CAACC;AA3CjB,OA6CGD,KAAK,CAACC,OAAN,IACC,6BAAC,YAAD;AACE,MAAA,WAAW,EAAE,GADf;AAEE,MAAA,UAAU,EAAEH,GAFd;AAGE,MAAA,UAAU,EAAED,KAAK,CAACa,UAHpB;AAIE,MAAA,YAAY,EAAEb,KAAK,CAACc;AAJtB,MA9CJ,CADD;AAAA,GADH,CAFF,CADF;AA+DD,CA9ED;;eAgFef,O","sourcesContent":["import React, { SFC, useRef, useEffect } from 'react';\r\nimport { Form, Button } from 'antd';\r\nimport FullScreenModal from './FullScreenModal';\r\nimport FPB from './FPB';\r\nimport { ComponentType } from './useFPBStore';\r\nimport { FormComponentProps } from 'antd/lib/form';\r\nimport { useLocalStore, Observer } from 'mobx-react-lite';\r\nimport { doWindowResize } from './utils';\r\nconst { create, Item } = Form;\r\ninterface FPBFormProps {\r\n  components: ComponentType[];\r\n  onChange?(e);\r\n  value?;\r\n}\r\nconst FPBForm: SFC<FPBFormProps> = props => {\r\n  const ref: any = useRef();\r\n  const footerRef: any = useRef();\r\n  const store = useLocalStore(() => ({\r\n    visible: false,\r\n    setVisible(visible) {\r\n      store.visible = visible;\r\n      if (visible) {\r\n        setTimeout(() => {\r\n          store.minuHeight = footerRef.current.clientHeight + 21;\r\n        }, 0);\r\n      }\r\n    },\r\n    minuHeight: 0,\r\n  }));\r\n  return (\r\n    <>\r\n      <Button onClick={_ => store.setVisible(true)}>设计</Button>\r\n      <Observer>\r\n        {() => (\r\n          <FullScreenModal\r\n            minuHeight={store.minuHeight}\r\n            onOk={_ => {\r\n              //   ref.current.config;\r\n              if (props.onChange) {\r\n                props.onChange(ref.current.config);\r\n              }\r\n            }}\r\n            destroyOnClose\r\n            footer={\r\n              <div ref={footerRef}>\r\n                <Form layout=\"inline\">\r\n                  <Item>\r\n                    <Button\r\n                      type=\"primary\"\r\n                      onClick={_ => {\r\n                        //   ref.current.config;\r\n                        if (props.onChange) {\r\n                          props.onChange(ref.current.config);\r\n                        }\r\n                      }}\r\n                    >\r\n                      保存\r\n                    </Button>\r\n                  </Item>\r\n                  <Item>\r\n                    <Button\r\n                      type=\"danger\"\r\n                      onClick={_ => {\r\n                        //   ref.current.config;\r\n                        if (props.onChange) {\r\n                          props.onChange(ref.current.config);\r\n                        }\r\n                        store.setVisible(false);\r\n                      }}\r\n                    >\r\n                      保存并关闭\r\n                    </Button>\r\n                  </Item>\r\n                </Form>\r\n              </div>\r\n            }\r\n            onCancel={_ => store.setVisible(false)}\r\n            visible={store.visible}\r\n          >\r\n            {store.visible && (\r\n              <FPB\r\n                renderDelay={200}\r\n                forwardRef={ref}\r\n                components={props.components}\r\n                defaultDatas={props.value}\r\n              />\r\n            )}\r\n          </FullScreenModal>\r\n        )}\r\n      </Observer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FPBForm;\r\n"],"file":"FPBForm.js"}