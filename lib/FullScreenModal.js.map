{"version":3,"sources":["../src/FPB/FullScreenModal.tsx"],"names":["FullScreenModal","allProps","bodyStyle","props","height","setHeight","minuHeight","footer","minuHeightRef","current","caclHeight","setTimeout","screenHeight","document","documentElement","clientHeight","window","addEventListener","removeEventListener","padding","margin","maxWidth","overflow"],"mappings":"81FASMA,CAAAA,eAA0C,CAAG,SAAAC,CAAQ,CAAI,IACrDC,CAAAA,CADqD,CAC7BD,CAD6B,CACrDC,SADqD,CACvCC,CADuC,0BAC7BF,CAD6B,kBAEjC,oBAAS,CAAT,CAFiC,uBAEtDG,CAFsD,MAE9CC,CAF8C,MAIvDC,CAAU,CAAG,mBAAQ,UAAM,CAC/B,MAAwB,KAAjB,GAAAH,CAAK,CAACI,MAAN,CAAwB,CAAxB,CAA4BJ,CAAK,CAACG,UAAN,CAAmBH,CAAK,CAACG,UAAzB,CAAsC,EAC1E,CAFkB,CAEhB,CAACH,CAAK,CAACI,MAAP,CAAeJ,CAAK,CAACG,UAArB,CAFgB,CAJ0C,CAOvDE,CAAa,CAAG,kBAAOF,CAAP,CAPuC,CAsB7D,MAdAE,CAAAA,CAAa,CAACC,OAAd,CAAwBH,CAcxB,CAbA,qBAAU,UAAM,CACd,GAAMI,CAAAA,CAAU,CAAG,UAAM,CACvBC,UAAU,CAAC,UAAM,CACf,GAAMC,CAAAA,CAAY,CAAGC,QAAQ,CAACC,eAAT,CAAyBC,YAA9C,CACAV,CAAS,CAACO,CAAY,CAAGJ,CAAa,CAACC,OAA9B,CACV,CAHS,CAIX,CALD,CAQA,MAFAC,CAAAA,CAAU,EAEV,CADAM,MAAM,CAACC,gBAAP,CAAwB,QAAxB,CAAkCP,CAAlC,CACA,CAAO,UAAM,CACXM,MAAM,CAACE,mBAAP,CAA2B,QAA3B,CAAqCR,CAArC,CACD,CACF,CAZD,CAYG,EAZH,CAaA,CACE,sDACE,KAAK,CAAE,CAAES,OAAO,CAAE,CAAX,CAAcC,MAAM,CAAE,CAAtB,CAAyBC,QAAQ,OAAjC,CADT,CAEE,KAAK,OAFP,CAGE,SAAS,gBAAIjB,MAAM,CAANA,CAAJ,CAAYkB,QAAQ,OAApB,EAAiCpB,CAAjC,CAHX,CAIE,QAAQ,GAJV,EAKMC,CALN,EAQH,C,UACcH,e","sourcesContent":["import React, { useEffect, useState, SFC, useMemo, useRef } from 'react';\r\nimport { Modal } from 'antd';\r\nimport { ModalProps } from 'antd/lib/modal';\r\nimport ReactDOM from 'react-dom';\r\n\r\ninterface FullScreenModalProps extends ModalProps {\r\n  minuHeight?: number;\r\n}\r\n\r\nconst FullScreenModal: SFC<FullScreenModalProps> = allProps => {\r\n  const { bodyStyle, ...props } = allProps;\r\n  const [height, setHeight] = useState(0);\r\n\r\n  const minuHeight = useMemo(() => {\r\n    return props.footer === null ? 0 : props.minuHeight ? props.minuHeight : 53;\r\n  }, [props.footer, props.minuHeight]);\r\n  const minuHeightRef = useRef(minuHeight);\r\n  minuHeightRef.current = minuHeight;\r\n  useEffect(() => {\r\n    const caclHeight = () => {\r\n      setTimeout(() => {\r\n        const screenHeight = document.documentElement.clientHeight;\r\n        setHeight(screenHeight - minuHeightRef.current);\r\n      });\r\n    };\r\n    caclHeight();\r\n    window.addEventListener('resize', caclHeight);\r\n    return () => {\r\n      window.removeEventListener('resize', caclHeight);\r\n    };\r\n  }, []);\r\n  return (\r\n    <Modal\r\n      style={{ padding: 0, margin: 0, maxWidth: `100%` }}\r\n      width={`100%`}\r\n      bodyStyle={{ height, overflow: `auto`, ...bodyStyle }}\r\n      centered\r\n      {...props}\r\n    />\r\n  );\r\n};\r\nexport default FullScreenModal;\r\n"],"file":"FullScreenModal.js"}