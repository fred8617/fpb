{"version":3,"sources":["../src/fpb/FullScreenModal.tsx"],"names":["FullScreenModal","allProps","bodyStyle","props","height","setHeight","minuHeight","footer","minuHeightRef","current","caclHeight","setTimeout","screenHeight","document","documentElement","clientHeight","window","addEventListener","removeEventListener","padding","margin","maxWidth","overflow"],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA,IAAMA,eAA0C,GAAG,SAA7CA,eAA6C,CAAAC,QAAQ,EAAI;AAAA,MACrDC,SADqD,GAC7BD,QAD6B,CACrDC,SADqD;AAAA,MACvCC,KADuC,4BAC7BF,QAD6B;;AAAA,kBAEjC,qBAAS,CAAT,CAFiC;AAAA;AAAA,MAEtDG,MAFsD;AAAA,MAE9CC,SAF8C;;AAI7D,MAAMC,UAAU,GAAG,oBAAQ,YAAM;AAC/B,WAAOH,KAAK,CAACI,MAAN,KAAiB,IAAjB,GAAwB,CAAxB,GAA4BJ,KAAK,CAACG,UAAN,GAAmBH,KAAK,CAACG,UAAzB,GAAsC,EAAzE;AACD,GAFkB,EAEhB,CAACH,KAAK,CAACI,MAAP,EAAeJ,KAAK,CAACG,UAArB,CAFgB,CAAnB;AAGA,MAAME,aAAa,GAAG,mBAAOF,UAAP,CAAtB;AACAE,EAAAA,aAAa,CAACC,OAAd,GAAwBH,UAAxB;AACA,wBAAU,YAAM;AACd,QAAMI,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBC,MAAAA,UAAU,CAAC,YAAM;AACf,YAAMC,YAAY,GAAGC,QAAQ,CAACC,eAAT,CAAyBC,YAA9C;AACAV,QAAAA,SAAS,CAACO,YAAY,GAAGJ,aAAa,CAACC,OAA9B,CAAT;AACD,OAHS,CAAV;AAID,KALD;;AAMAC,IAAAA,UAAU;AACVM,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCP,UAAlC;AACA,WAAO,YAAM;AACXM,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCR,UAArC;AACD,KAFD;AAGD,GAZD,EAYG,EAZH;AAaA,SACE;AACE,IAAA,KAAK,EAAE;AAAES,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,MAAM,EAAE,CAAtB;AAAyBC,MAAAA,QAAQ;AAAjC,KADT;AAEE,IAAA,KAAK,QAFP;AAGE,IAAA,SAAS;AAAIjB,MAAAA,MAAM,EAANA,MAAJ;AAAYkB,MAAAA,QAAQ;AAApB,OAAiCpB,SAAjC,CAHX;AAIE,IAAA,QAAQ;AAJV,KAKMC,KALN,EADF;AASD,CA/BD;;eAgCeH,e","sourcesContent":["import React, { useEffect, useState, SFC, useMemo, useRef } from 'react';\r\nimport { Modal } from 'antd';\r\nimport { ModalProps } from 'antd/lib/modal';\r\nimport ReactDOM from 'react-dom';\r\n\r\ninterface FullScreenModalProps extends ModalProps {\r\n  minuHeight?: number;\r\n}\r\n\r\nconst FullScreenModal: SFC<FullScreenModalProps> = allProps => {\r\n  const { bodyStyle, ...props } = allProps;\r\n  const [height, setHeight] = useState(0);\r\n\r\n  const minuHeight = useMemo(() => {\r\n    return props.footer === null ? 0 : props.minuHeight ? props.minuHeight : 53;\r\n  }, [props.footer, props.minuHeight]);\r\n  const minuHeightRef = useRef(minuHeight);\r\n  minuHeightRef.current = minuHeight;\r\n  useEffect(() => {\r\n    const caclHeight = () => {\r\n      setTimeout(() => {\r\n        const screenHeight = document.documentElement.clientHeight;\r\n        setHeight(screenHeight - minuHeightRef.current);\r\n      });\r\n    };\r\n    caclHeight();\r\n    window.addEventListener('resize', caclHeight);\r\n    return () => {\r\n      window.removeEventListener('resize', caclHeight);\r\n    };\r\n  }, []);\r\n  return (\r\n    <Modal\r\n      style={{ padding: 0, margin: 0, maxWidth: `100%` }}\r\n      width={`100%`}\r\n      bodyStyle={{ height, overflow: `auto`, ...bodyStyle }}\r\n      centered\r\n      {...props}\r\n    />\r\n  );\r\n};\r\nexport default FullScreenModal;\r\n"],"file":"FullScreenModal.js"}