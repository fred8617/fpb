{"version":3,"sources":["../src/FPB/ItemSettingForm.tsx"],"names":["Size","Option","OptGroup","TreeNode","Panel","getFormItemCol","labelCol","span","wrapperCol","getCol","width","size","col","LARGE","MIDDLE","SMALL","create","Item","ItemSettingForm","props","form","item","onItemPropsChange","console","log","recurseEverything","initialKeyCounter","keyCounter","setKeyCounter","recordItem","current","resetFields","setTimeout","Object","keys","length","getFieldsValue","componentProps","setFieldsValue","initialValue","getFieldDecorator","getFieldValue","renderTypeTreeNode","component","children","id","label","map","componentTypeDec","componentId","autoHeightDec","valuePropName","autoHeight","isFormFieldDec","isFormField","$idDec","$id","labelDec","flatComponents","formField","sortProps","destination","source","values","arr","droppableId","dragValue","index","splice","deleteProp","propName","createComponentPropsForm","prefix","componentPropsEntries","entries","filter","prop","type","indexOf","setting","name","options","rules","components","i","mapedArr","push","provided","droppableProps","innerRef","p","pi","key","draggableProps","margin","dragHandleProps","placeholder","color","cursor","propsDecModels","maxHeight","overflow","componentGroup","groupOrComponent","settingForm","onValuesChange","changedValues","allValues","field","value","onItemTypeChange","onFieldsChange"],"mappings":"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","sourcesContent":["import {\r\n  Form,\r\n  Select,\r\n  TreeSelect,\r\n  Input,\r\n  Switch,\r\n  Tooltip,\r\n  Icon,\r\n  Button,\r\n  Radio,\r\n  Collapse,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Card,\r\n} from 'antd';\r\nimport { FormComponentProps } from 'antd/lib/form';\r\nimport {\r\n  ComponentGroup,\r\n  ComponentType,\r\n  FPBItem,\r\n  ComponentProps,\r\n} from './useFPBStore';\r\nimport React, { useState, useEffect, Fragment, useRef } from 'react';\r\nimport { get } from 'lodash';\r\nimport CommonInput from './CommonInput';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport useSizeMe from './useSizeMe';\r\nimport { toJS } from 'mobx';\r\nimport { getObjectKeysWhenIsArray } from './utils';\r\nimport FPBForm from './FPBForm';\r\nimport GraphqlEditor from './GraphqlEditor';\r\n\r\nconst { Option, OptGroup } = Select;\r\nconst { TreeNode } = TreeSelect;\r\nconst { Panel } = Collapse;\r\nenum Size {\r\n  SMALL,\r\n  MIDDLE,\r\n  LARGE,\r\n}\r\n// xs\t<576\r\n// sm\t≥576\r\n// md\t≥768\r\n// lg\t≥992\r\n// xl\t≥1200\r\n// xxl ≥1600\r\nconst getFormItemCol = (width: number) => {\r\n  const col = { labelCol: { span: 24 }, wrapperCol: { span: 24 } };\r\n  // if (width >= 256) {\r\n  //   col.labelCol.span = 10;\r\n  //   col.wrapperCol.span = 14;\r\n  // }\r\n  return col;\r\n};\r\nconst getCol = (width: number, size: Size) => {\r\n  const col = { span: 24 };\r\n  if (size === Size.LARGE) {\r\n    return col;\r\n  } else if (size === Size.MIDDLE) {\r\n    if (width >= 576 && width < 1200) {\r\n      col.span = 8;\r\n      return col;\r\n    } else if (width >= 1200) {\r\n      col.span = 6;\r\n      return col;\r\n    }\r\n    return col;\r\n  } else if (size === Size.SMALL) {\r\n    if (width > 256 && width < 576) {\r\n      col.span = 12;\r\n      return col;\r\n    } else if (width >= 576 && width < 1200) {\r\n      col.span = 6;\r\n      return col;\r\n    } else if (width >= 1200) {\r\n      col.span = 4;\r\n      return col;\r\n    }\r\n    return col;\r\n  }\r\n};\r\nexport interface ItemSettingProps {\r\n  /**\r\n   * 分组组件\r\n   */\r\n  componentGroup: (ComponentGroup | ComponentType)[];\r\n  /**\r\n   * 平铺组件方便查找属性\r\n   */\r\n  flatComponents: { [id: string]: ComponentType };\r\n  /**\r\n   * item类型\r\n   * @param id id\r\n   */\r\n  onItemTypeChange(id: string);\r\n  /**\r\n   * item的属性改变\r\n   * @param field 字段\r\n   * @param value 值\r\n   */\r\n  onItemPropsChange(field: string, value: any);\r\n}\r\nexport interface ItemSettingFormProps\r\n  extends FormComponentProps,\r\n    ItemSettingProps {\r\n  /**\r\n   * 编辑中数据，用于初始化值\r\n   */\r\n  item: FPBItem;\r\n  components: ComponentType[];\r\n  /**\r\n   * 初始计数器\r\n   */\r\n  initialKeyCounter;\r\n}\r\n\r\nconst { create, Item } = Form;\r\n\r\nconst ItemSettingForm: React.SFC<ItemSettingFormProps> = props => {\r\n  const { form, item, onItemPropsChange } = props;\r\n  console.log('ItemSettingForm', toJS(props, { recurseEverything: true }));\r\n  const [keyCounter, setKeyCounter] = useState(() => props.initialKeyCounter);\r\n  const recordItem = useRef(item);\r\n  useEffect(() => {\r\n    if (recordItem.current !== item) {\r\n      form.resetFields();\r\n      recordItem.current = item;\r\n    }\r\n  }, [item]);\r\n  useEffect(() => {\r\n    //临时解决方案\r\n    setTimeout(\r\n      () =>\r\n        Object.keys(keyCounter).length &&\r\n        form.getFieldsValue().componentProps &&\r\n        form.setFieldsValue({\r\n          componentProps: form.getFieldsValue().componentProps,\r\n        }),\r\n      500,\r\n    );\r\n  }, [keyCounter]);\r\n\r\n  const initialValue: FPBItem | { [key: string]: any } = item || {};\r\n  const { getFieldDecorator, getFieldsValue, getFieldValue } = form;\r\n  const renderTypeTreeNode = component => {\r\n    if (component.children) {\r\n      return (\r\n        <TreeNode\r\n          value={component.id}\r\n          title={component.label}\r\n          key={component.id}\r\n        >\r\n          {component.children.map(component => {\r\n            return renderTypeTreeNode(component);\r\n          })}\r\n        </TreeNode>\r\n      );\r\n    }\r\n    return (\r\n      <TreeNode\r\n        value={component.id}\r\n        title={component.label}\r\n        key={component.id}\r\n      />\r\n    );\r\n  };\r\n  //组件类型\r\n  const componentTypeDec = getFieldDecorator('componentId', {\r\n    initialValue: initialValue.componentId,\r\n    //preserve: true\r\n  });\r\n  /**\r\n   * 自适应高度\r\n   */\r\n  const autoHeightDec = getFieldDecorator('autoHeight', {\r\n    valuePropName: 'checked',\r\n    initialValue: initialValue.autoHeight,\r\n    //preserve: true\r\n  });\r\n  /**\r\n   * 是否作为表单域\r\n   */\r\n  const isFormFieldDec = getFieldDecorator('isFormField', {\r\n    valuePropName: 'checked',\r\n    initialValue: initialValue.isFormField,\r\n    //preserve: true\r\n  });\r\n  /**\r\n   * 是否作为表单域id\r\n   */\r\n  const $idDec = getFieldDecorator('$id', {\r\n    initialValue: initialValue.$id,\r\n    //preserve: true\r\n  });\r\n  /**\r\n   * 是否作为表单域label\r\n   */\r\n  const labelDec = getFieldDecorator('label', {\r\n    initialValue: initialValue.label,\r\n    //preserve: true\r\n  });\r\n  const { componentId, isFormField } = getFieldsValue();\r\n  // console.log(props.flatComponents[componentId]);\r\n  const { componentProps = {}, formField } =\r\n    props.flatComponents[componentId] || {};\r\n  const sortProps = ({ destination, source }) => {\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    const values = form.getFieldsValue();\r\n    const arr = get(values, destination.droppableId);\r\n    const dragValue = arr[source.index];\r\n    arr.splice(source.index, 1);\r\n    arr.splice(destination.index, 0, dragValue);\r\n    form.setFieldsValue({\r\n      componentProps: values.componentProps,\r\n    });\r\n  };\r\n  const deleteProp = (propName, index) => {\r\n    const values = getFieldsValue();\r\n    const arr = get(values, propName);\r\n    arr.splice(index, 1);\r\n    keyCounter[propName].splice(index, 1);\r\n    form.setFieldsValue({\r\n      componentProps: values.componentProps,\r\n    });\r\n    setKeyCounter({ ...keyCounter });\r\n  };\r\n  const createComponentPropsForm = (\r\n    componentProps: ComponentProps,\r\n    prefix = 'componentProps',\r\n  ) => {\r\n    const componentPropsEntries = Object.entries(componentProps);\r\n    return [\r\n      ...componentPropsEntries\r\n        .filter(([, prop]) => prop.type.indexOf('array') < 0)\r\n        .map(([name, prop], i) => {\r\n          let setting;\r\n          const propName = `${prefix}.${name}`;\r\n          const options = {\r\n            rules: prop.rules,\r\n          };\r\n          if (prop.type === 'string') {\r\n            setting = (\r\n              <Item label={prop.label} key={propName}>\r\n                {getFieldDecorator(propName, {\r\n                  initialValue: get(item, propName),\r\n                  ...options,\r\n                  //preserve: true\r\n                })(<CommonInput />)}\r\n              </Item>\r\n            );\r\n          } else if (prop.type === 'FPR') {\r\n            // console.log('FPR', get(item, propName));\r\n\r\n            setting = (\r\n              <Item label={prop.label} key={propName}>\r\n                {getFieldDecorator(propName, {\r\n                  initialValue: toJS(get(item, propName), {\r\n                    recurseEverything: true,\r\n                  }),\r\n                  ...options,\r\n                  //preserve: true\r\n                })(<FPBForm components={props.components} />)}\r\n              </Item>\r\n            );\r\n          } else if (prop.type === 'graphql') {\r\n            setting = (\r\n              <Item label={prop.label} key={propName}>\r\n                {getFieldDecorator(propName, {\r\n                  initialValue: get(item, propName),\r\n                  ...options,\r\n                  //preserve: true\r\n                })(<GraphqlEditor />)}\r\n              </Item>\r\n            );\r\n          }\r\n\r\n          return setting;\r\n        }),\r\n      <Collapse key={`settings`} accordion destroyInactivePanel={false}>\r\n        {componentPropsEntries\r\n          .filter(([, prop]) => prop.type.indexOf('array') >= 0)\r\n          .map(([name, prop], i) => {\r\n            let setting;\r\n            const propName = `${prefix}.${name}`;\r\n            let mapedArr;\r\n            mapedArr = keyCounter[propName] || [];\r\n            setting = (\r\n              <Panel forceRender header={prop.label} key={`setting${i}`}>\r\n                <Button\r\n                  icon=\"plus\"\r\n                  onClick={e => {\r\n                    const props = get(item, prefix) || {};\r\n                    if (!props[name]) {\r\n                      //没有则默认设置为空数组并默认添加一个\r\n                      keyCounter[propName] = [{}];\r\n                      setKeyCounter({ ...keyCounter });\r\n                      return;\r\n                    }\r\n                    //这里是有shouldHaveOne的情况，只走这里\r\n                    if (!keyCounter[propName]) {\r\n                      keyCounter[propName] = [];\r\n                    }\r\n                    keyCounter[propName].push({});\r\n                    setKeyCounter({ ...keyCounter });\r\n                  }}\r\n                >\r\n                  添加{prop.label}\r\n                </Button>\r\n                {(prop.type === 'array:component' && (\r\n                  <DragDropContext onDragEnd={sortProps}>\r\n                    <Droppable droppableId={propName}>\r\n                      {provided => {\r\n                        return (\r\n                          <div\r\n                            {...provided.droppableProps}\r\n                            ref={provided.innerRef}\r\n                          >\r\n                            {mapedArr.map((p, pi) => {\r\n                              const key = `${propName}[${pi}]`;\r\n\r\n                              return (\r\n                                <Draggable\r\n                                  key={key}\r\n                                  draggableId={key}\r\n                                  index={pi}\r\n                                >\r\n                                  {provided => {\r\n                                    return (\r\n                                      <div\r\n                                        key={key}\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.draggableProps}\r\n                                        // className=\"ant-form ant-form-inline\"\r\n                                      >\r\n                                        <Card\r\n                                          style={{ margin: `5px 0` }}\r\n                                          key={`car${pi}`}\r\n                                          actions={[\r\n                                            <div {...provided.dragHandleProps}>\r\n                                              <Icon type=\"drag\" key={'drag'} />\r\n                                            </div>,\r\n                                            <Icon\r\n                                              type=\"delete\"\r\n                                              key={'delete'}\r\n                                              onClick={_ =>\r\n                                                deleteProp(propName, pi)\r\n                                              }\r\n                                            />,\r\n                                          ]}\r\n                                        >\r\n                                          {createComponentPropsForm(\r\n                                            componentProps[name].componentProps,\r\n                                            `${propName}[${pi}].componentProps`,\r\n                                          )}\r\n                                        </Card>\r\n                                      </div>\r\n                                    );\r\n                                  }}\r\n                                </Draggable>\r\n                              );\r\n                            })}\r\n                            {provided.placeholder}\r\n                          </div>\r\n                        );\r\n                      }}\r\n                    </Droppable>\r\n                  </DragDropContext>\r\n                )) ||\r\n                  (prop.type === 'array:string' && (\r\n                    <DragDropContext onDragEnd={sortProps}>\r\n                      <Droppable droppableId={propName}>\r\n                        {provided => {\r\n                          return (\r\n                            <div\r\n                              {...provided.droppableProps}\r\n                              ref={provided.innerRef}\r\n                            >\r\n                              {mapedArr.map((p, pi) => {\r\n                                const key = `${propName}[${pi}]`;\r\n                                // console.log(key);\r\n                                return (\r\n                                  <Draggable\r\n                                    key={key}\r\n                                    draggableId={key}\r\n                                    index={pi}\r\n                                  >\r\n                                    {provided => {\r\n                                      return (\r\n                                        <div\r\n                                          key={key}\r\n                                          ref={provided.innerRef}\r\n                                          {...provided.draggableProps}\r\n                                          className=\"ant-form ant-form-inline\"\r\n                                        >\r\n                                          <Item>\r\n                                            <div {...provided.dragHandleProps}>\r\n                                              <Icon type=\"drag\" />\r\n                                            </div>\r\n                                          </Item>\r\n                                          <Item>\r\n                                            {getFieldDecorator(key, {\r\n                                              //preserve: true,\r\n                                              initialValue: get(item, key),\r\n                                            })(<CommonInput />)}\r\n                                          </Item>\r\n                                          <Item>\r\n                                            <Icon\r\n                                              onClick={_ =>\r\n                                                deleteProp(propName, pi)\r\n                                              }\r\n                                              type=\"delete\"\r\n                                              style={{\r\n                                                color: `red`,\r\n                                                cursor: `pointer`,\r\n                                              }}\r\n                                            />\r\n                                          </Item>\r\n                                        </div>\r\n                                      );\r\n                                    }}\r\n                                  </Draggable>\r\n                                );\r\n                              })}\r\n                              {provided.placeholder}\r\n                            </div>\r\n                          );\r\n                        }}\r\n                      </Droppable>\r\n                    </DragDropContext>\r\n                  ))}\r\n              </Panel>\r\n            );\r\n\r\n            return setting;\r\n          })}\r\n      </Collapse>,\r\n    ];\r\n  };\r\n\r\n  const propsDecModels = createComponentPropsForm(componentProps);\r\n\r\n  const [settingForm] = useSizeMe(size => {\r\n    const { width } = size;\r\n    return (\r\n      <Form {...getFormItemCol(width)}>\r\n        <Collapse\r\n          accordion\r\n          defaultActiveKey={['1']}\r\n          destroyInactivePanel={false}\r\n        >\r\n          <Panel forceRender header={`基础设置`} key=\"1\">\r\n            <Row gutter={15}>\r\n              <Col {...getCol(width, Size.MIDDLE)}>\r\n                <Item label={'组件'}>\r\n                  {componentTypeDec(\r\n                    <TreeSelect\r\n                      onChange={_ => setKeyCounter({})}\r\n                      showSearch\r\n                      style={{ width: `100%` }}\r\n                      dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\r\n                      placeholder=\"请选择组件\"\r\n                      allowClear\r\n                      autoClearSearchValue\r\n                      treeDefaultExpandAll\r\n                    >\r\n                      {props.componentGroup.map((groupOrComponent, index) => {\r\n                        if (groupOrComponent.id) {\r\n                          return renderTypeTreeNode(groupOrComponent);\r\n                        }\r\n                        return (\r\n                          <TreeNode\r\n                            disabled\r\n                            value={groupOrComponent['groupName']}\r\n                            title={groupOrComponent['groupName']}\r\n                            key={groupOrComponent['groupName']}\r\n                          >\r\n                            {groupOrComponent[\r\n                              groupOrComponent['groupName']\r\n                            ].map(component => {\r\n                              return renderTypeTreeNode(component);\r\n                            })}\r\n                          </TreeNode>\r\n                        );\r\n                      })}\r\n                    </TreeSelect>,\r\n                  )}\r\n                </Item>\r\n              </Col>\r\n              <Col {...getCol(width, Size.SMALL)}>\r\n                <Item\r\n                  label={\r\n                    <span>\r\n                      自适应高度&nbsp;\r\n                      <Tooltip title=\"开启后区块将自适应内容高度，不能进行纵向resize操作\">\r\n                        <Icon type=\"question-circle-o\" />\r\n                      </Tooltip>\r\n                    </span>\r\n                  }\r\n                >\r\n                  {autoHeightDec(\r\n                    <Switch checkedChildren={'开'} unCheckedChildren={'关'} />,\r\n                  )}\r\n                </Item>\r\n              </Col>\r\n\r\n              {formField && (\r\n                <Fragment key=\"frag\">\r\n                  <Col {...getCol(width, Size.SMALL)}>\r\n                    <Item label={'是否作为表单域'}>\r\n                      {isFormFieldDec(\r\n                        <Switch\r\n                          checkedChildren={'是'}\r\n                          unCheckedChildren={'否'}\r\n                        />,\r\n                      )}\r\n                    </Item>\r\n                  </Col>\r\n                  {isFormField && (\r\n                    <>\r\n                      <Col {...getCol(width, Size.MIDDLE)}>\r\n                        <Item\r\n                          label={\r\n                            <span>\r\n                              id&nbsp;\r\n                              <Tooltip title=\"表单域传值字段，不填写默认为区块id，需保证唯一\">\r\n                                <Icon type=\"question-circle-o\" />\r\n                              </Tooltip>\r\n                            </span>\r\n                          }\r\n                        >\r\n                          {$idDec(<CommonInput placeholder={'请填写id'} />)}\r\n                        </Item>\r\n                      </Col>\r\n                      <Col {...getCol(width, Size.MIDDLE)}>\r\n                        <Item label={<span>label</span>}>\r\n                          {labelDec(<CommonInput placeholder={''} />)}\r\n                        </Item>\r\n                      </Col>\r\n                    </>\r\n                  )}\r\n                </Fragment>\r\n              )}\r\n              {/* <Col></Col> */}\r\n            </Row>\r\n          </Panel>\r\n          {propsDecModels.length && (\r\n            <Panel forceRender header={'自定义设置'} key=\"2\">\r\n              {propsDecModels}\r\n            </Panel>\r\n          )}\r\n        </Collapse>\r\n      </Form>\r\n    );\r\n  }, {});\r\n  return <>{settingForm}</>;\r\n};\r\nexport default create<ItemSettingFormProps>({\r\n  onValuesChange(props, changedValues, allValues) {\r\n    const field = Object.keys(changedValues)[0];\r\n    if (!field) {\r\n      return;\r\n    }\r\n    const value = changedValues[field];\r\n    console.log('onValuesChange', field, allValues[field]);\r\n    if (field === 'componentId') {\r\n      props.onItemTypeChange(value);\r\n    } else {\r\n      props.onItemPropsChange(field, allValues[field]);\r\n    }\r\n  },\r\n  onFieldsChange(props, fields) {},\r\n})(ItemSettingForm);\r\n"],"file":"ItemSettingForm.js"}