{"version":3,"sources":["../src/FPB/ObservableBlockContainer.tsx"],"names":["ObservableBlockContainer","props","hasEditingItem","store","isEditing","isEditingItem","editingItem","i","itemKey","hasBorder","border","zIndex","boxSizing","_","setEditingItem","data","deleteItem"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;;AAGA;;;;AAeA,IAAMA,wBAEL,GAAG,SAFEA,wBAEF,CAAAC,KAAK,EAAI;AACX,MAAMC,cAAc,GAAGD,KAAK,CAACE,KAAN,CAAYC,SAAnC;AACA,MAAMC,aAAa,GACjBJ,KAAK,CAACE,KAAN,CAAYG,WAAZ,IAA2BL,KAAK,CAACE,KAAN,CAAYG,WAAZ,CAAwBC,CAAxB,KAA8BN,KAAK,CAACO,OADjE;AAEA,MAAMC,SAAS,GAAG,CAACP,cAAD,IAAmBG,aAArC;AACA,MAAMK,MAAM,uBAAgBL,aAAa,GAAG,SAAH,GAAe,SAA5C,CAAZ;AACA,SACE,6BAAC,uBAAD,QACG;AAAA,WACC,4DACE;AACE,MAAA,SAAS,EAAC,gBADZ;AAEE,MAAA,KAAK,EAAE;AACLK,QAAAA,MAAM,EAAED,SAAS,GAAGC,MAAH,GAAY,IADxB;AAELC,QAAAA,MAAM,EAAEN,aAAa,GAAG,IAAH,GAAU,CAF1B;AAGLO,QAAAA,SAAS,EAAEP,aAAa,GAAG,aAAH,GAAmB;AAHtC;AAFT,OAQG,CAACA,aAAD,IACC;AACE,MAAA,OAAO,EAAC,aADV;AAEE,MAAA,OAAO,EACL,4DACE;AAAM,QAAA,MAAM,EAAC;AAAb,SACE,2CAAM,IAAN,QACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,OAAO,EAAE,iBAAAQ,CAAC,EAAI;AACZZ,UAAAA,KAAK,CAACE,KAAN,CAAYW,cAAZ,CAA2Bb,KAAK,CAACc,IAAjC;AACD,SAJH;AAKE,QAAA,IAAI,EAAC;AALP,QADF,CADF,EAUE,2CAAM,IAAN,QACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAE,iBAAAF,CAAC;AAAA,iBAAIZ,KAAK,CAACE,KAAN,CAAYa,UAAZ,CAAuBf,KAAK,CAACO,OAA7B,CAAJ;AAAA;AAHZ,QADF,CAVF,CADF;AAHJ,OAyBE;AAAK,MAAA,SAAS,EAAC;AAAf,MAzBF,CATJ,CADF,CADD;AAAA,GADH,CADF;AA8CD,CAtDD;;eAuDeR,wB","sourcesContent":["import React from 'react';\r\nimport { Popover, Form, Button } from 'antd';\r\nimport { FPBStore, FPBItem } from './useFPBStore';\r\nimport { useObserver, Observer } from 'mobx-react-lite';\r\nexport interface ObservableBlockContainerProps {\r\n  /**\r\n   * 全局store\r\n   */\r\n  store: FPBStore;\r\n  /**\r\n   * itemkey\r\n   */\r\n  itemKey: string;\r\n  /**\r\n   * @interface FPBItem\r\n   */\r\n  data: FPBItem;\r\n}\r\nconst ObservableBlockContainer: React.SFC<\r\n  ObservableBlockContainerProps\r\n> = props => {\r\n  const hasEditingItem = props.store.isEditing;\r\n  const isEditingItem =\r\n    props.store.editingItem && props.store.editingItem.i === props.itemKey;\r\n  const hasBorder = !hasEditingItem || isEditingItem;\r\n  const border = `1px solid ${isEditingItem ? '#e72727' : '#d3d3d3'}`;\r\n  return (\r\n    <Observer>\r\n      {() => (\r\n        <>\r\n          <div\r\n            className=\"item-container\"\r\n            style={{\r\n              border: hasBorder ? border : null,\r\n              zIndex: isEditingItem ? null : 1,\r\n              boxSizing: isEditingItem ? 'content-box' : null,\r\n            }}\r\n          >\r\n            {!isEditingItem && (\r\n              <Popover\r\n                trigger=\"contextMenu\"\r\n                content={\r\n                  <>\r\n                    <Form layout=\"inline\">\r\n                      <Form.Item>\r\n                        <Button\r\n                          icon=\"edit\"\r\n                          onClick={_ => {\r\n                            props.store.setEditingItem(props.data);\r\n                          }}\r\n                          type=\"primary\"\r\n                        />\r\n                      </Form.Item>\r\n                      <Form.Item>\r\n                        <Button\r\n                          icon=\"delete\"\r\n                          type=\"danger\"\r\n                          onClick={_ => props.store.deleteItem(props.itemKey)}\r\n                        />\r\n                      </Form.Item>\r\n                    </Form>\r\n                  </>\r\n                }\r\n              >\r\n                <div className=\"function-container\"></div>\r\n              </Popover>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </Observer>\r\n  );\r\n};\r\nexport default ObservableBlockContainer;\r\n"],"file":"ObservableBlockContainer.js"}