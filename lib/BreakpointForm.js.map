{"version":3,"sources":["../src/FPB/BreakpointForm.tsx"],"names":["create","Item","BreakpointForm","props","form","initialData","getFieldDecorator","getFieldsValue","breakpointsDec","initialValue","breakpoints","rules","required","message","map","point","cols"],"mappings":"+fAIQA,CAAAA,M,eAAAA,M,CAAQC,I,eAAAA,I,CAIVC,cAA8C,CAAG,SAAAC,CAAK,CAAI,IACtDC,CAAAA,CADsD,CAChCD,CADgC,CACtDC,IADsD,CAChDC,CADgD,CAChCF,CADgC,CAChDE,WADgD,CAEtDC,CAFsD,CAEhBF,CAFgB,CAEtDE,iBAFsD,CAEnCC,CAFmC,CAEhBH,CAFgB,CAEnCG,cAFmC,CAGxDC,CAAc,CAAGF,CAAiB,CAAC,aAAD,CAAgB,CACtDG,YAAY,CAAEJ,CAAW,CAACK,WAD4B,CAEtDC,KAAK,CAAE,CAAC,CAAEC,QAAQ,GAAV,CAAkBC,OAAO,CAAE,kDAA3B,CAAD,CAF+C,CAAhB,CAHsB,GAOjCN,CAAc,EAPmB,KAOtDG,WAPsD,CAOtDA,CAPsD,YAOxC,EAPwC,GAS9D;AACA;AACA;AACA;AACA;AACA;AACA,MACE,2DACE,6BAAC,IAAD,EAAM,KAAK,CAAC,cAAZ,EACGF,CAAc,CACb,+CAAU,KAAV,MACE,gDAAU,KAAK,CAAE,IAAjB,EAAwB,WAAxB,CADF,CAEE,gDAAU,KAAK,CAAE,IAAjB,EAAwB,gBAAxB,CAFF,CAGE,gDAAU,KAAK,CAAE,IAAjB,EAAwB,gBAAxB,CAHF,CAIE,gDAAU,KAAK,CAAE,IAAjB,EAAwB,gBAAxB,CAJF,CAKE,gDAAU,KAAK,CAAE,IAAjB,EAAwB,iBAAxB,CALF,CADa,CADjB,CADF,CAaGE,CAAW,CAACI,GAAZ,CAAgB,SAAAC,CAAK,CAAI,CACxB,MACE,8BAAC,IAAD,EAAM,KAAK,CAAEA,CAAb,CAAoB,GAAG,CAAEA,CAAzB,EACGT,CAAiB,gBAASS,CAAT,EAAkB,CAClCN,YAAY,CAAEJ,CAAW,CAACW,IAAZ,CAAiBD,CAAjB,CADoB,CAElCJ,KAAK,CAAE,CAAC,CAAEC,QAAQ,GAAV,CAAkBC,OAAO,CAAE,oEAA3B,CAAD,CAF2B,CAAlB,CAAjB,CAIC,4CAAO,KAAP,MACE,6CAAO,KAAK,CAAE,CAAd,MADF,CAEE,6CAAO,KAAK,CAAE,CAAd,MAFF,CAGE,6CAAO,KAAK,CAAE,CAAd,MAHF,CAIE,6CAAO,KAAK,CAAE,CAAd,MAJF,CAKE,6CAAO,KAAK,CAAE,CAAd,MALF,CAME,6CAAO,KAAK,CAAE,CAAd,MANF,CAOE,6CAAO,KAAK,CAAE,EAAd,OAPF,CAQE,6CAAO,KAAK,CAAE,EAAd,OARF,CAJD,CADH,CAkBH,CApBA,CAbH,CAoCH,C,UAEc,cAAKb,MAAL,GAAmCE,cAAnC,C","sourcesContent":["import React, { SFC } from \"react\";\r\nimport { Form, Modal, Checkbox, Radio } from \"antd\";\r\nimport { FormComponentProps } from \"antd/lib/form\";\r\nimport { BreakpointsConfig } from \"./useFPBStore\";\r\nconst { create, Item } = Form;\r\ninterface BreakpointFormProps extends FormComponentProps {\r\n  initialData: BreakpointsConfig;\r\n}\r\nconst BreakpointForm: React.SFC<BreakpointFormProps> = props => {\r\n  const { form, initialData } = props;\r\n  const { getFieldDecorator, getFieldsValue } = form;\r\n  const breakpointsDec = getFieldDecorator(\"breakpoints\", {\r\n    initialValue: initialData.breakpoints,\r\n    rules: [{ required: true, message: \"必须存在一个断点\" }]\r\n  });\r\n  const { breakpoints = [] } = getFieldsValue();\r\n\r\n  // xs\t<576px 响应式栅格，可为栅格数或一个包含其他属性的对象\tnumber|object\t-\r\n  // sm\t≥576px 响应式栅格，可为栅格数或一个包含其他属性的对象\tnumber|object\t-\r\n  // md\t≥768px 响应式栅格，可为栅格数或一个包含其他属性的对象\tnumber|object\t-\r\n  // lg\t≥992px 响应式栅格，可为栅格数或一个包含其他属性的对象\tnumber|object\t-\r\n  // xl\t≥1200px 响应式栅格，可为栅格数或一个包含其他属性的对象\tnumber|object\t-\r\n  // xxl ≥1600px 响应式栅格，可为栅格数或一个包含其他属性的对象\r\n  return (\r\n    <>\r\n      <Item label=\"断点\">\r\n        {breakpointsDec(\r\n          <Checkbox.Group>\r\n            <Checkbox value={\"xs\"}>{\"xs <576px\"}</Checkbox>\r\n            <Checkbox value={\"sm\"}>{\"sm ≥576px\"}</Checkbox>\r\n            <Checkbox value={\"md\"}>{\"md ≥768px\"}</Checkbox>\r\n            <Checkbox value={\"lg\"}>{\"lg ≥992px\"}</Checkbox>\r\n            <Checkbox value={\"xl\"}>{\"xl ≥1200px\"}</Checkbox>\r\n            {/* <Checkbox value={\"xxl\"}>{\"xxl ≥1600px\"}</Checkbox> */}\r\n          </Checkbox.Group>\r\n        )}\r\n      </Item>\r\n      {breakpoints.map(point => {\r\n        return (\r\n          <Item label={point} key={point}>\r\n            {getFieldDecorator(`cols.${point}`, {\r\n              initialValue: initialData.cols[point],\r\n              rules: [{ required: true, message: \"请选择断点布局栅格数量\" }]\r\n            })(\r\n              <Radio.Group>\r\n                <Radio value={1}>1</Radio>\r\n                <Radio value={2}>2</Radio>\r\n                <Radio value={3}>3</Radio>\r\n                <Radio value={4}>4</Radio>\r\n                <Radio value={6}>6</Radio>\r\n                <Radio value={8}>8</Radio>\r\n                <Radio value={12}>12</Radio>\r\n                <Radio value={24}>24</Radio>\r\n              </Radio.Group>\r\n            )}\r\n          </Item>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Form.create<BreakpointFormProps>()(BreakpointForm);\r\n"],"file":"BreakpointForm.js"}