{"version":3,"file":"useSizeMe.js","names":["useSizeMe","render","options","useState","width","height","currentSize","setSize","size"],"sources":["../src/fpb/useSizeMe.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { SizeMe } from \"react-sizeme\";\nexport interface Size {\n  width: number;\n  height: number;\n}\n\nexport default function useSizeMe(\n  render,\n  options\n): [React.ReactElement, number, number] {\n  const [currentSize, setSize] = useState<Size>({ width: null, height: null });\n  return [\n    <SizeMe {...options}>\n      {({ size }: { size: Size }) => {\n        if (\n          size.width !== currentSize.width ||\n          size.height !== currentSize.height\n        ) {\n          setSize(size);\n        }\n        return render({ ...size });\n      }}\n    </SizeMe>,\n    currentSize.width,\n    currentSize.height\n  ];\n}\n"],"mappings":";;;;;;;AAAA;AACA;AAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMvB,SAASA,SAAS,CAC/BC,MAAM,EACNC,OAAO,EAC+B;EACtC,gBAA+B,IAAAC,eAAQ,EAAO;MAAEC,KAAK,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAK,CAAC,CAAC;IAAA;IAArEC,WAAW;IAAEC,OAAO;EAC3B,OAAO,cACL,6BAAC,mBAAM,EAAKL,OAAO,EAChB,gBAA8B;IAAA,IAA3BM,IAAI,QAAJA,IAAI;IACN,IACEA,IAAI,CAACJ,KAAK,KAAKE,WAAW,CAACF,KAAK,IAChCI,IAAI,CAACH,MAAM,KAAKC,WAAW,CAACD,MAAM,EAClC;MACAE,OAAO,CAACC,IAAI,CAAC;IACf;IACA,OAAOP,MAAM,mBAAMO,IAAI,EAAG;EAC5B,CAAC,CACM,EACTF,WAAW,CAACF,KAAK,EACjBE,WAAW,CAACD,MAAM,CACnB;AACH"}