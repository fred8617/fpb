{"version":3,"sources":["../src/fpb/useSizeMe.tsx"],"names":["useSizeMe","render","options","width","height","currentSize","setSize","size"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;AAMe,SAASA,SAAT,CACbC,MADa,EAEbC,OAFa,EAGyB;AAAA,kBACP,qBAAe;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,MAAM,EAAE;AAAvB,GAAf,CADO;AAAA;AAAA,MAC/BC,WAD+B;AAAA,MAClBC,OADkB;;AAEtC,SAAO,CACL,6BAAC,mBAAD,EAAYJ,OAAZ,EACG,gBAA8B;AAAA,QAA3BK,IAA2B,QAA3BA,IAA2B;;AAC7B,QACEA,IAAI,CAACJ,KAAL,KAAeE,WAAW,CAACF,KAA3B,IACAI,IAAI,CAACH,MAAL,KAAgBC,WAAW,CAACD,MAF9B,EAGE;AACAE,MAAAA,OAAO,CAACC,IAAD,CAAP;AACD;;AACD,WAAON,MAAM,mBAAMM,IAAN,EAAb;AACD,GATH,CADK,EAYLF,WAAW,CAACF,KAZP,EAaLE,WAAW,CAACD,MAbP,CAAP;AAeD","sourcesContent":["import React, { useState } from \"react\";\r\nimport { SizeMe } from \"react-sizeme\";\r\nexport interface Size {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport default function useSizeMe(\r\n  render,\r\n  options\r\n): [React.ReactElement, number, number] {\r\n  const [currentSize, setSize] = useState<Size>({ width: null, height: null });\r\n  return [\r\n    <SizeMe {...options}>\r\n      {({ size }: { size: Size }) => {\r\n        if (\r\n          size.width !== currentSize.width ||\r\n          size.height !== currentSize.height\r\n        ) {\r\n          setSize(size);\r\n        }\r\n        return render({ ...size });\r\n      }}\r\n    </SizeMe>,\r\n    currentSize.width,\r\n    currentSize.height\r\n  ];\r\n}\r\n"],"file":"useSizeMe.js"}