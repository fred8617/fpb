{"version":3,"sources":["../src/FPB/useSizeMe.tsx"],"names":["useSizeMe","render","options","width","height","currentSize","setSize","size"],"mappings":"mjEAOe,QAASA,CAAAA,SAAT,CACbC,CADa,CAEbC,CAFa,CAGyB,OACP,oBAAe,CAAEC,KAAK,CAAE,IAAT,CAAeC,MAAM,CAAE,IAAvB,CAAf,CADO,uBAC/BC,CAD+B,MAClBC,CADkB,MAEtC,MAAO,CACL,6BAAC,mBAAD,CAAYJ,CAAZ,CACG,WAA8B,IAA3BK,CAAAA,CAA2B,GAA3BA,IAA2B,CAO7B,OALEA,CAAI,CAACJ,KAAL,GAAeE,CAAW,CAACF,KAA3B,EACAI,CAAI,CAACH,MAAL,GAAgBC,CAAW,CAACD,MAI9B,GAFEE,CAAO,CAACC,CAAD,CAET,CAAON,CAAM,kBAAMM,CAAN,EACd,CATH,CADK,CAYLF,CAAW,CAACF,KAZP,CAaLE,CAAW,CAACD,MAbP,CAeR","sourcesContent":["import React, { useState } from \"react\";\r\nimport { SizeMe } from \"react-sizeme\";\r\nexport interface Size {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport default function useSizeMe(\r\n  render,\r\n  options\r\n): [React.ReactElement, number, number] {\r\n  const [currentSize, setSize] = useState<Size>({ width: null, height: null });\r\n  return [\r\n    <SizeMe {...options}>\r\n      {({ size }: { size: Size }) => {\r\n        if (\r\n          size.width !== currentSize.width ||\r\n          size.height !== currentSize.height\r\n        ) {\r\n          setSize(size);\r\n        }\r\n        return render({ ...size });\r\n      }}\r\n    </SizeMe>,\r\n    currentSize.width,\r\n    currentSize.height\r\n  ];\r\n}\r\n"],"file":"useSizeMe.js"}