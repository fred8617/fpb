{"version":3,"sources":["../src/FPB/ObservableBlock.tsx"],"names":["ObservableBlock","React","memo","props","store","getComponent","item","datas","i","Component","componentProps","componentId","isFormField","component","flatComponents","recurseEverything","children","rest","finalComponentProps","defaultValue","value","renderComponentChildren","comp","chil","type","map","child","Comp","requiredRules","find","rule","components","shouldHaveOne","length","finalComponent","isPreview","autoHeight","operatedItem","h","getItemHeight","breakpoint","height","caclHeight","renderedComponent"],"mappings":"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","sourcesContent":["import React, { SFC } from 'react';\r\nimport { FPBStore, ComponentType } from './useFPBStore';\r\nimport { Observer } from 'mobx-react-lite';\r\nimport Block from './Block';\r\nimport { toJS } from 'mobx';\r\nimport FormConsumerComponent from './FormConsumerComponent';\r\nimport FPB from './FPB';\r\nimport ErrorWrapper from './ErrorWrapper';\r\nimport { findRequiredRules } from './utils';\r\nimport { Alert } from 'antd';\r\n\r\nexport interface ObservableBlockProps {\r\n  i;\r\n  store: FPBStore;\r\n  components: ComponentType[];\r\n}\r\n/**\r\n * 观察者区块\r\n * @param props @interface ObservableBlockProps\r\n */\r\nconst ObservableBlock: SFC<ObservableBlockProps> = React.memo(\r\n  (props: ObservableBlockProps) => {\r\n    // useEffect(() => {\r\n    //   console.log(\"mounted\");\r\n    // }, []);\r\n    const { store } = props;\r\n    const getComponent = () => {\r\n      const item = props.store.datas[props.i];\r\n      const {\r\n        Component,\r\n        componentProps,\r\n        componentId,\r\n        isFormField,\r\n      } = item;\r\n      const component = store.flatComponents[componentId];\r\n\r\n      // const component = store.flatComponents[componentId];\r\n      const { children, ...rest } = toJS(componentProps || {}, {\r\n        recurseEverything: true,\r\n      });\r\n      const finalComponentProps = { ...rest };\r\n      if (isFormField) {\r\n        delete finalComponentProps.defaultValue;\r\n        delete finalComponentProps.value;\r\n      }\r\n\r\n      // component.componentProps&&findRequiredRules(component.componentProps);\r\n      /**\r\n       *\r\n       * @param comp 组件类型\r\n       * @param chil 表单中的子元素部分\r\n       */\r\n      const renderComponentChildren = (comp = component, chil = children) => {\r\n        // console.log(toJS(children));\r\n        //debugger;\r\n        // //debugger\r\n\r\n        if (\r\n          comp.componentProps && //组件含有属性\r\n          comp.componentProps.children && //组件属性中包含子元素\r\n          comp.componentProps.children.type === 'array:component' //子元素为数组\r\n        ) {\r\n          // if(comp.componentProps.children.shouldHaveOne){\r\n          //   //debugger\r\n          //   chil.push({})\r\n          // }\r\n          // console.log('child');\r\n          return chil.map((child, i) => {\r\n            const Comp = comp.componentProps.children.Component; //获取子组件组件类型\r\n            const { children, ...rest } =\r\n              toJS(child.componentProps, { recurseEverything: true }) || {};\r\n            const requiredRules = findRequiredRules(\r\n              comp.componentProps.children.componentProps,\r\n            );\r\n            if (requiredRules.find(rule => !rest[rule])) {\r\n              return (\r\n                <Alert\r\n                  key={`chil${i}`}\r\n                  message=\"提示\"\r\n                  description=\"属性不全请补齐\"\r\n                  type=\"warning\"\r\n                  showIcon\r\n                />\r\n              );\r\n            }\r\n            return (\r\n              <Comp key={`chil${i}`} {...rest}>\r\n                {children &&\r\n                  renderComponentChildren(\r\n                    comp.componentProps.children as any,\r\n                    children,\r\n                  )}\r\n              </Comp>\r\n            );\r\n          });\r\n        } else if (\r\n          comp.componentProps && //组件含有属性\r\n          comp.componentProps.children && //组件属性中包含子元素\r\n          comp.componentProps.children.type === 'FPR' //子元素为数组\r\n        ) {\r\n          // console.log('renderfpr');\r\n\r\n          return (\r\n            <Observer>\r\n              {() => (\r\n                <FPB components={props.components} FPR defaultDatas={chil} />\r\n              )}\r\n            </Observer>\r\n          ); //组件含有属性 //组件属性中包含子元素\r\n        } else {\r\n          return chil;\r\n        }\r\n      };\r\n      return (\r\n        Component && //存在Component并且\r\n        (!component.componentProps || //没有属性或者\r\n        !component.componentProps.children || //有属性没有子元素或者\r\n        !component.componentProps.children.shouldHaveOne || //或者有子元素不需要默认创建\r\n          (component.componentProps.children && //有子元素并且需要有默认元素并且类型还是数组的需要长度大于0\r\n            component.componentProps.children.shouldHaveOne &&\r\n            component.componentProps.children.type === 'array:component' &&\r\n            children &&\r\n            children.length)) && (\r\n          <ErrorWrapper>\r\n            {props => {\r\n              // console.log('rule',component.componentProps);\r\n              const requiredRules = findRequiredRules(component.componentProps);\r\n              if (requiredRules.find(rule => !finalComponentProps[rule])) {\r\n                return (\r\n                  <Alert\r\n                    message=\"提示\"\r\n                    description=\"属性不全请补齐\"\r\n                    type=\"warning\"\r\n                    showIcon\r\n                  />\r\n                );\r\n              }\r\n              return (\r\n                <Component {...finalComponentProps} {...props}>\r\n                  {children && renderComponentChildren()}\r\n                </Component>\r\n              );\r\n            }}\r\n          </ErrorWrapper>\r\n        )\r\n      );\r\n    };\r\n    let finalComponent = getComponent();\r\n    return (\r\n      <Observer>\r\n        {() => {\r\n          const item = props.store.datas[props.i];\r\n          return (\r\n            <Block\r\n              showTag={!store.isPreview}\r\n              autoHeight={item.autoHeight}\r\n              height={\r\n                props.store.operatedItem &&\r\n                props.store.operatedItem.i === props.i\r\n                  ? props.store.operatedItem.h\r\n                  : props.store.getItemHeight(props.i)\r\n              }\r\n              breakpoint={props.store.breakpoint}\r\n              onParentHeightChange={height => {\r\n                props.store.caclHeight(height, props.i);\r\n              }}\r\n            >\r\n              <Observer>\r\n                {() => {\r\n                  let renderedComponent;\r\n                  if (!store.isPreview) {\r\n                    // console.log('getComponent');\r\n\r\n                    finalComponent = getComponent();\r\n                  }\r\n                  if (item.isFormField && finalComponent) {\r\n                    renderedComponent = (\r\n                      <FormConsumerComponent\r\n                        item={item}\r\n                        component={finalComponent}\r\n                      />\r\n                    );\r\n                    //\r\n                  } else {\r\n                    renderedComponent = finalComponent;\r\n                  }\r\n                  return <>{renderedComponent}</>;\r\n                }}\r\n              </Observer>\r\n            </Block>\r\n          );\r\n        }}\r\n      </Observer>\r\n    );\r\n  },\r\n);\r\nexport default ObservableBlock;\r\n"],"file":"ObservableBlock.js"}