{"version":3,"sources":["../src/FPB/useFPBStore.tsx"],"names":["emptyLayouts","xxl","xl","lg","md","sm","xs","Mode","breakpointsStandard","defaultbreakpoints","defaultCols","useFPBStore","props","force","store","source","rowHeight","margin","layouts","breakpoints","cols","config","datas","breakpointsArr","recurseEverything","mode","DESIGN","isPreview","PRIVIEW","changeMode","e","target","value","breakpoint","defaultFormField","breakpointsConfig","Object","keys","computedLayout","fromEntries","map","point","hasLayout","length","setDatas","entries","key","data","Component","componentId","flatComponents","setLayouts","_currentLayout","JSON","stringify","console","log","setBreakpoint","_col","setBreakpointFromEntry","setBreakpointConfig","values","setBreakpointSettingVisible","deleteItem","jsConfig","onBreakpointChange","onLayoutChange","onResize","onResizeStop","isDraggable","editingItem","isResizable","operatedItem","setOperatedItem","_layout","_oldItem","newItem","findItem","find","b","i","findItemInAllBreakpoints","items","item","getItemHeight","h","caclHeight","height","itemData","breakpointsItems","autoHeight","forEach","maxH","minH","undefined","Math","ceil","createItem","shortid","generate","componentProps","isFormField","$id","setTimeout","doWindowResize","onItemTypeChange","label","component","formField","onItemPropsChange","field","isEditing","setEditingItem","dealChildren","arr","components","parent","id","children","componentGroup","componentsHasGroup","filter","group","componentsNoGroup","allGroup","Set","returnGroup","filterGroup","push","breakpointSettingVisible"],"mappings":"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","sourcesContent":["import React, { ExoticComponent } from 'react';\r\nimport { useLocalStore, useForceUpdate } from 'mobx-react-lite';\r\nimport { doWindowResize } from './utils';\r\nimport { toJS, set, remove } from 'mobx';\r\nimport 'react-grid-layout/css/styles.css';\r\nimport 'react-resizable/css/styles.css';\r\nimport { Size } from 'react-split-pane';\r\nimport shortid from 'shortid';\r\nimport { ItemSettingProps } from './ItemSettingForm';\r\nimport { FormComponentProps, ValidationRule } from 'antd/lib/form';\r\nimport { RadioChangeEvent } from 'antd/lib/radio';\r\n\r\nconst emptyLayouts: BreakpointsLayouts = {\r\n  xxl: [],\r\n  xl: [],\r\n  lg: [],\r\n  md: [],\r\n  sm: [],\r\n  xs: [],\r\n};\r\ninterface Breakpoints {\r\n  xxl?: number;\r\n  xl?: number;\r\n  lg?: number;\r\n  md?: number;\r\n  sm?: number;\r\n  xs?: number;\r\n}\r\ntype ColNumber = 1 | 2 | 3 | 4 | 6 | 8 | 12 | 24;\r\ninterface Cols {\r\n  xxl?: ColNumber;\r\n  xl?: ColNumber;\r\n  lg?: ColNumber;\r\n  md?: ColNumber;\r\n  sm?: ColNumber;\r\n  xs?: ColNumber;\r\n}\r\n/**\r\n * RGL的基础配置\r\n */\r\nexport interface RGLConfig {\r\n  /**\r\n   * 元素单位高度\r\n   */\r\n  rowHeight?: number;\r\n  /**\r\n   * 元素间距\r\n   */\r\n  margin?: [number, number];\r\n  /**\r\n   *元素的断点布局\r\n   */\r\n  layouts: BreakpointsLayouts;\r\n  /**\r\n   * 响应断点宽度\r\n   */\r\n  breakpoints: Breakpoints;\r\n  /**\r\n   * 断点对应格子数\r\n   */\r\n  cols: Cols;\r\n}\r\n\r\n/**\r\n * RGL元素\r\n */\r\nexport interface RGLItem {\r\n  /**\r\n   * A string corresponding to the component key\r\n   */\r\n  i: string;\r\n  /**\r\n   * These are all in grid units, not pixels\r\n   */\r\n  x: number;\r\n  y: number;\r\n  w: number;\r\n  h: number;\r\n  minW?: number;\r\n  maxW?: number;\r\n  minH?: number;\r\n  maxH?: number;\r\n  // If true equal to `isDraggable: false, isResizable: false`.\r\n  static?: boolean;\r\n  // If false, will not be draggable. Overrides `static`.\r\n  isDraggable?: boolean;\r\n  // If false, will not be resizable. Overrides `static`.\r\n  isResizable?: boolean;\r\n}\r\n\r\n/**\r\n * 断点布局\r\n */\r\nexport interface BreakpointsLayouts {\r\n  xxl?: RGLItem[];\r\n  xl?: RGLItem[];\r\n  lg?: RGLItem[];\r\n  md?: RGLItem[];\r\n  sm?: RGLItem[];\r\n  xs?: RGLItem[];\r\n}\r\n\r\n/**\r\n * 组件基础属性\r\n */\r\ninterface BaseComponentProp {\r\n  /**\r\n   * 属性名称\r\n   */\r\n  label: string;\r\n  /**\r\n   * 类型\r\n   */\r\n  type:\r\n    | 'array:component'\r\n    | 'array:string'\r\n    | 'string'\r\n    | 'number'\r\n    | 'FPR'\r\n    | 'graphql';\r\n  /**\r\n   * 校验规则\r\n   */\r\n  rules?: ValidationRule[];\r\n  /**\r\n   * 组件\r\n   */\r\n  Component?: React.ComponentClass | ExoticComponent | null | React.SFC;\r\n  /**\r\n   * type为array时是否默认增加一个元素\r\n   */\r\n  shouldHaveOne?: boolean;\r\n  /**\r\n   * 存在组件的话可设置组件默认属性\r\n   */\r\n  componentProps?: ComponentProps;\r\n}\r\n/**\r\n * 数组组件属性\r\n */\r\nexport interface ArrayComponentProp extends BaseComponentProp {\r\n  /**\r\n   * 类型\r\n   */\r\n  type: 'array:component';\r\n  /**\r\n   * 组件\r\n   */\r\n  Component: React.ComponentClass | ExoticComponent | React.SFC;\r\n  /**\r\n   * type为array时是否默认增加一个元素\r\n   */\r\n  shouldHaveOne?: boolean;\r\n  /**\r\n   * 存在组件的话可设置组件默认属性\r\n   */\r\n  componentProps?: ComponentProps;\r\n}\r\n/**\r\n * 数组字符串\r\n */\r\nexport interface ArrayStringProp extends BaseComponentProp {\r\n  /**\r\n   * 类型\r\n   */\r\n  type: 'array:string';\r\n  /**\r\n   * type为array时是否默认增加一个元素\r\n   */\r\n  shouldHaveOne?: boolean;\r\n}\r\n\r\nexport interface FPRProp extends BaseComponentProp {\r\n  type: 'FPR';\r\n}\r\n\r\nexport interface StringProp extends BaseComponentProp {\r\n  /**\r\n   * 类型\r\n   */\r\n  type: 'string';\r\n}\r\nexport interface GraphqlProp extends BaseComponentProp {\r\n  /**\r\n   * 类型\r\n   */\r\n  type: 'graphql';\r\n}\r\n\r\nexport interface ComponentProps {\r\n  [propName: string]:\r\n    | FPRProp\r\n    | ArrayComponentProp\r\n    | ArrayStringProp\r\n    | StringProp\r\n    | GraphqlProp;\r\n  children?: FPRProp | ArrayComponentProp | ArrayStringProp | StringProp;\r\n}\r\n\r\n/**\r\n * 组件基础\r\n */\r\nexport interface BaseComponentType {\r\n  /**\r\n   * 主键\r\n   */\r\n  id: string;\r\n  /**\r\n   * 组件名称\r\n   */\r\n  label: string;\r\n  /**\r\n   * 组件引入名称\r\n   */\r\n  name: string;\r\n  /**\r\n   * 子组件\r\n   */\r\n  children?: BaseComponentType[];\r\n  /**\r\n   * 父组件\r\n   */\r\n  parent?: BaseComponentType;\r\n  /**\r\n   * 组件,本想dynamic import 一下，但是webpack不支持\r\n   */\r\n  Component: React.ComponentClass | React.SFC;\r\n  /**\r\n   * 组件属性\r\n   */\r\n  componentProps?: ComponentProps;\r\n  /**\r\n   * 是否可为表单域\r\n   */\r\n  formField?: boolean;\r\n}\r\n\r\n/**\r\n * 组件类型\r\n */\r\nexport interface ComponentType extends BaseComponentType {\r\n  /**\r\n   * 引入路径\r\n   */\r\n  path: string;\r\n  /**\r\n   * 是否为默认引入\r\n   */\r\n  isDefault: boolean;\r\n  /**\r\n   * 分组\r\n   */\r\n  group?: string;\r\n}\r\n\r\nexport interface ComponentGroup {\r\n  [groupName: string]: ComponentType[] | string;\r\n}\r\n\r\nexport interface FPBProps extends FormComponentProps {\r\n  FPR?: boolean;\r\n  forwardRef?: any;\r\n  /**\r\n   * 延迟渲染，在模态框弹出动画非常有用，antd modal设置200即可\r\n   */\r\n  renderDelay?: number;\r\n  defaultDatas?: FPBConfig;\r\n  // /**\r\n  //  * 默认配置\r\n  //  */\r\n  // defaultConfig?: RGLConfig;\r\n  // /**\r\n  //  * 默认布局\r\n  //  */\r\n  // defaultLayouts?: BreakpointsLayouts;\r\n  /**\r\n   * 左侧布局的默认宽度\r\n   */\r\n  contentDefaultSize?: Size;\r\n  /**\r\n   * 导入组件\r\n   */\r\n  components: ComponentType[];\r\n}\r\nexport interface BreakpointsConfig {\r\n  breakpoints: string[];\r\n  cols: Cols;\r\n}\r\n\r\nexport interface FPBConfig {\r\n  /**\r\n   *元素的断点布局\r\n   */\r\n  layouts: BreakpointsLayouts;\r\n  /**\r\n   * 数据源\r\n   */\r\n  datas: FPBItemIndexListInitial;\r\n  /**\r\n   * 断点对应格子数\r\n   */\r\n  cols?: Cols;\r\n  /**\r\n   * 包含断点\r\n   */\r\n  breakpoints?: string[];\r\n}\r\n/**\r\n * pb的store\r\n */\r\nexport interface FPBStore extends RGLConfig, ItemSettingProps {\r\n  setBreakpointFromEntry(breakpoints: any);\r\n  /**\r\n   * 获取全部配置项以及数据\r\n   */\r\n  config: FPBConfig;\r\n  /**\r\n   * 删除区块\r\n   * @param itemKey 主键\r\n   */\r\n  deleteItem(itemKey: string): void;\r\n  /**\r\n   * 模式\r\n   * @enum Mode\r\n   */\r\n  mode: Mode;\r\n  changeMode: (e: RadioChangeEvent) => void;\r\n  isPreview: boolean;\r\n  /**\r\n   * 索引数据源\r\n   */\r\n  datas: FPBItemIndexList;\r\n  hasLayout: () => boolean;\r\n  breakpoint: 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs';\r\n  /**\r\n   * 断点数组的key\r\n   */\r\n  breakpointsArr: string[];\r\n  /**\r\n   * 获取当前所有断点的布局数组\r\n   */\r\n  computedLayout: BreakpointsLayouts;\r\n  /**\r\n   *断点计算配置用于表单初始值\r\n   */\r\n  breakpointsConfig: BreakpointsConfig;\r\n  /**\r\n   * 布局变更\r\n   * @param currentLayout 当前布局\r\n   * @param layouts 变更后布局\r\n   */\r\n  setLayouts(currentLayout: BreakpointsLayouts, layouts: BreakpointsLayouts);\r\n  /**\r\n   * 数据集合变更\r\n   *\r\n   * @param datas 数据集合\r\n   */\r\n  setDatas(datas);\r\n  /**\r\n   * 设置当前断点\r\n   * @param breakpoint 当前断点\r\n   * @param col 布局列\r\n   */\r\n  setBreakpoint(breakpoint, col?);\r\n  /**\r\n   * RGLConfig\r\n   */\r\n  jsConfig: RGLConfig;\r\n  /**\r\n   * 根据高度计算元素相对的h\r\n   * @param height 高度\r\n   * @param key 主键\r\n   */\r\n  caclHeight(height: number | null | undefined, key: string);\r\n  /**\r\n   * 创建一个元素\r\n   */\r\n  createItem();\r\n  /**\r\n   * 根据主键查询当前断点下的item\r\n   * @param key 主键\r\n   */\r\n  findItem(key: string): RGLItem;\r\n  /**\r\n   * 找出全部断点下的当前item\r\n   */\r\n  findItemInAllBreakpoints(key: string): { [point: string]: RGLItem };\r\n  /**\r\n   * 获取元素当前响应布局高度高度\r\n   * @param key 主键\r\n   */\r\n  getItemHeight(key): number;\r\n  /**\r\n   * item的resize事件\r\n   */\r\n  onResize: RGLItemCallBack;\r\n  onResizeStop: RGLItemCallBack;\r\n  /**\r\n   * 操作中的item\r\n   */\r\n  operatedItem: RGLItem;\r\n  /**\r\n   * 设置操作中数据\r\n   * @param item @interface RGLItem\r\n   */\r\n  setOperatedItem(item: RGLItem);\r\n  /**\r\n   * 编辑中的数据\r\n   */\r\n  editingItem: FPBItem;\r\n  /**\r\n   * 设置编辑中的数据\r\n   * @param item @interface FPBItem\r\n   */\r\n  setEditingItem(item: FPBItem);\r\n  /**\r\n   * 编辑状态\r\n   */\r\n  isEditing: boolean;\r\n  /**\r\n   * 平铺组件，方便查找\r\n   */\r\n  flatComponents: { [id: string]: ComponentType };\r\n  /**\r\n   * 组件的为formField,则编辑时默认表单域为true\r\n   */\r\n  defaultFormField: boolean;\r\n  /**\r\n   * 断点设置弹出\r\n   */\r\n  breakpointSettingVisible: boolean;\r\n  setBreakpointSettingVisible(breakpointSettingVisible: boolean);\r\n  /**\r\n   * 设置布局断点配置\r\n   */\r\n  setBreakpointConfig(values);\r\n}\r\nexport type RGLItemCallBack = (\r\n  layout: RGLItem[],\r\n  /**\r\n   * 旧数据\r\n   */\r\n  oldItem: RGLItem,\r\n  /**\r\n   * 新数据\r\n   */\r\n  newItem: RGLItem,\r\n  placeholder: RGLItem,\r\n  e: MouseEvent,\r\n  element: HTMLElement,\r\n) => void;\r\nexport interface FPBItemIndexList {\r\n  [key: string]: FPBItem;\r\n}\r\nexport interface FPBItemIndexListInitial {\r\n  [key: string]: Omit<FPBItem, 'Component'>;\r\n}\r\n\r\nexport enum Mode {\r\n  /**\r\n   * 设计模式\r\n   */\r\n  DESIGN = 'design',\r\n  /**\r\n   * 预览模式\r\n   */\r\n  PRIVIEW = 'priview',\r\n}\r\n\r\n/**\r\n * fpb元素\r\n */\r\nexport interface FPBItem {\r\n  /**\r\n   * 主键\r\n   */\r\n  i: string;\r\n  /**\r\n   * 组件类\r\n   */\r\n  Component: React.ComponentClass | React.SFC;\r\n  /**\r\n   * 组件属性\r\n   */\r\n  componentProps: { [key: string]: any };\r\n  /**\r\n   * 自适应高度\r\n   */\r\n  autoHeight: boolean;\r\n  /**\r\n   * 组件id\r\n   */\r\n  componentId: string;\r\n  /**\r\n   * 是否为表单域\r\n   */\r\n  isFormField: boolean;\r\n  /**\r\n   * 表单域id,默认为i\r\n   */\r\n  $id: string;\r\n  /**\r\n   * 表单域的label\r\n   */\r\n  label?: string;\r\n}\r\n// xs\t<576px 响应式栅格，可为栅格数或一个包含其他属性的对象\tnumber|object\t-\r\n// sm\t≥576px 响应式栅格，可为栅格数或一个包含其他属性的对象\tnumber|object\t-\r\n// md\t≥768px 响应式栅格，可为栅格数或一个包含其他属性的对象\tnumber|object\t-\r\n// lg\t≥992px 响应式栅格，可为栅格数或一个包含其他属性的对象\tnumber|object\t-\r\n// xl\t≥1200px 响应式栅格，可为栅格数或一个包含其他属性的对象\tnumber|object\t-\r\n// xxl\r\nexport const breakpointsStandard: Breakpoints = {\r\n  xl: 1600,\r\n  lg: 1200,\r\n  md: 992,\r\n  sm: 768,\r\n  xs: 576,\r\n  // xs: 0\r\n};\r\nconst defaultbreakpoints: Breakpoints = {\r\n  lg: breakpointsStandard.lg,\r\n  // md: breakpointsStandard.md\r\n};\r\nconst defaultCols: Cols = { xxl: 12, xl: 12, lg: 8, md: 6, sm: 4, xs: 2 };\r\n\r\nconst useFPBStore = (props): FPBStore => {\r\n  const force = useForceUpdate();\r\n  const store: FPBStore = useLocalStore<\r\n    FPBStore,\r\n    Omit<Omit<FPBProps, 'form'>, 'schema'>\r\n  >(\r\n    source => ({\r\n      rowHeight: 1,\r\n      margin: [0, 0],\r\n      layouts: emptyLayouts,\r\n      breakpoints: defaultbreakpoints,\r\n      cols: defaultCols,\r\n      /*********************** */\r\n      get config() {\r\n        return toJS<FPBConfig>(\r\n          {\r\n            datas: store.datas,\r\n            layouts: store.layouts,\r\n            cols: store.cols,\r\n            breakpoints: store.breakpointsArr,\r\n          },\r\n          { recurseEverything: true },\r\n        );\r\n      },\r\n      mode: Mode.DESIGN,\r\n      get isPreview() {\r\n        return store.mode === Mode.PRIVIEW;\r\n      },\r\n      changeMode(e) {\r\n        store.mode = e.target.value;\r\n      },\r\n      datas: {},\r\n      breakpoint: 'lg',\r\n      defaultFormField: true,\r\n      get breakpointsConfig() {\r\n        return {\r\n          breakpoints: store.breakpointsArr,\r\n          cols: store.cols,\r\n        };\r\n      },\r\n      get breakpointsArr() {\r\n        return Object.keys(store.breakpoints);\r\n      },\r\n      get computedLayout() {\r\n        return Object.fromEntries(\r\n          store.breakpointsArr.map(point => [\r\n            point,\r\n            store.layouts[point] || [],\r\n          ]),\r\n        );\r\n      },\r\n      hasLayout() {\r\n        return Object.keys(store.datas).length !== 0;\r\n      },\r\n      setDatas(datas: any) {\r\n        const entries = Object.fromEntries(\r\n          Object.entries(datas).map(([key, data]: [string, any]) => [\r\n            key,\r\n            {\r\n              ...data,\r\n              Component:\r\n                data.componentId &&\r\n                store.flatComponents[data.componentId].Component,\r\n            },\r\n          ]),\r\n        ) as any;\r\n        store.datas = entries;\r\n      },\r\n      setLayouts(_currentLayout, layouts) {\r\n        if (JSON.stringify(store.layouts) == JSON.stringify(layouts)) {\r\n          return;\r\n        }\r\n        console.log('layout-change', toJS(store.layouts), layouts);\r\n        store.layouts = layouts;\r\n      },\r\n      setBreakpoint(breakpoint, _col) {\r\n        console.log('setBreakpoint', breakpoint, store.datas);\r\n\r\n        store.breakpoint = breakpoint;\r\n      },\r\n      setBreakpointFromEntry(breakpoints) {\r\n        store.breakpoints = Object.fromEntries(\r\n          breakpoints.map(point => [point, breakpointsStandard[point]]),\r\n        );\r\n      },\r\n      setBreakpointConfig(values) {\r\n        store.setBreakpointFromEntry(values.breakpoints);\r\n        store.cols = {\r\n          ...store.cols,\r\n          ...values.cols,\r\n        };\r\n        store.setBreakpointSettingVisible(false);\r\n      },\r\n      deleteItem(key) {\r\n        remove(store.datas, key);\r\n        force();\r\n      },\r\n      get jsConfig() {\r\n        return toJS(\r\n          {\r\n            layouts: store.computedLayout,\r\n            rowHeight: store.rowHeight,\r\n            margin: store.margin,\r\n            breakpoints: store.breakpoints,\r\n            cols: store.cols,\r\n            onBreakpointChange: store.setBreakpoint,\r\n            onLayoutChange: store.setLayouts,\r\n            onResize: store.onResize,\r\n            onResizeStop: store.onResizeStop,\r\n            //此处是个问题\r\n            isDraggable: store.editingItem === null && !store.isPreview,\r\n            isResizable: store.editingItem === null && !store.isPreview,\r\n          },\r\n          { recurseEverything: true },\r\n        );\r\n      },\r\n      operatedItem: null,\r\n      setOperatedItem(operatedItem) {\r\n        store.operatedItem = operatedItem;\r\n      },\r\n      onResize(_layout, _oldItem, newItem) {\r\n        store.setOperatedItem(newItem);\r\n      },\r\n      onResizeStop() {\r\n        store.setOperatedItem(null);\r\n      },\r\n      findItem(key) {\r\n        return store.layouts[store.breakpoint].find(b => b.i === key);\r\n      },\r\n      findItemInAllBreakpoints(key) {\r\n        return Object.fromEntries(\r\n          Object.entries(store.layouts).map(([point, items]) => [\r\n            point,\r\n            items.find((item: { i: string }) => item.i === key),\r\n          ]),\r\n        );\r\n      },\r\n      getItemHeight(key) {\r\n        const item = store.findItem(key);\r\n        return item && item.h;\r\n      },\r\n      caclHeight(height, key) {\r\n        const itemData = store.datas[key];\r\n        const item = store.findItem(key);\r\n        const breakpointsItems = store.findItemInAllBreakpoints(key);\r\n        if (!itemData.autoHeight) {\r\n          Object.values(breakpointsItems).forEach(item => {\r\n            if (item) {\r\n              delete item.maxH;\r\n              delete item.minH;\r\n            }\r\n          });\r\n\r\n          return;\r\n        }\r\n        if (height === null || height === undefined) {\r\n          return;\r\n        }\r\n        //store中对应的数据，非布局\r\n        const h = Math.ceil(height / store.rowHeight);\r\n        item.h = h || 30;\r\n        item.maxH = item.h;\r\n        item.minH = item.h;\r\n      },\r\n      createItem() {\r\n        const i = shortid.generate();\r\n        // store.layouts[store.breakpoint].push(item);\r\n        const newItem: FPBItem = {\r\n          i,\r\n          Component: null,\r\n          autoHeight: true,\r\n          componentProps: {},\r\n          componentId: null,\r\n          isFormField: null,\r\n          $id: null,\r\n        };\r\n        set(store.datas, i, newItem);\r\n        force();\r\n        setTimeout(doWindowResize, 0);\r\n      },\r\n      editingItem: null,\r\n      onItemTypeChange(value) {\r\n        if (!value) {\r\n          store.editingItem.Component = null;\r\n          store.editingItem.componentProps = null;\r\n          store.editingItem.isFormField = null;\r\n          delete store.editingItem.label;\r\n          return;\r\n        }\r\n        const component = store.flatComponents[value];\r\n\r\n        store.editingItem.Component = component.Component;\r\n        store.editingItem.componentProps = {};\r\n        if (component.formField) {\r\n          store.editingItem.isFormField = store.defaultFormField;\r\n          // store.editingItem.label = \"\";\r\n          set(store.editingItem, 'label', '');\r\n          // .label = '';\r\n          //这里默认给i值吧\r\n          // store.editingItem.$id = shortid.generate()\r\n        }\r\n\r\n        // Object.entries(component.componentProps).\r\n        // store.editingItem.componentProps = ;\r\n        store.editingItem.componentId = value;\r\n\r\n        // set(store.editingItem, field, value);\r\n      },\r\n      onItemPropsChange(field, value) {\r\n        store.editingItem[field] = value;\r\n      },\r\n      get isEditing() {\r\n        return store.editingItem !== null;\r\n      },\r\n      setEditingItem(editingItem) {\r\n        store.editingItem = editingItem;\r\n      },\r\n      get flatComponents() {\r\n        const flatComponents = {};\r\n        const dealChildren = (\r\n          arr: (ComponentType | BaseComponentType)[] = source.components,\r\n          parent?: ComponentType | BaseComponentType,\r\n        ) => {\r\n          arr.forEach(component => {\r\n            flatComponents[component.id] = component;\r\n            if (parent) {\r\n              component.parent = parent;\r\n            }\r\n            if (component.children) {\r\n              dealChildren(component.children, component);\r\n            }\r\n          });\r\n        };\r\n        dealChildren();\r\n        console.log(flatComponents);\r\n\r\n        return flatComponents;\r\n      },\r\n      get componentGroup() {\r\n        //有分组组件\r\n        const componentsHasGroup = source.components.filter(\r\n          component => component.group,\r\n        );\r\n        //无分组组件\r\n        const componentsNoGroup = source.components.filter(\r\n          component => !component.group,\r\n        );\r\n        //全部分组\r\n        const allGroup = [\r\n          ...new Set(componentsHasGroup.map(component => component.group)),\r\n        ];\r\n        //自动分组\r\n        const returnGroup = [];\r\n        allGroup.forEach(group => {\r\n          const filterGroup = componentsHasGroup.filter(\r\n            component => component.group === group,\r\n          );\r\n          returnGroup.push({ [group]: filterGroup, groupName: group });\r\n        });\r\n        componentsNoGroup.forEach(component => {\r\n          returnGroup.push(component);\r\n        });\r\n        return returnGroup;\r\n      },\r\n      breakpointSettingVisible: false,\r\n      setBreakpointSettingVisible(breakpointSettingVisible) {\r\n        store.breakpointSettingVisible = breakpointSettingVisible;\r\n      },\r\n    }),\r\n    { components: props.components },\r\n  );\r\n  return store;\r\n};\r\n\r\nexport default useFPBStore;\r\n"],"file":"useFPBStore.js"}