{"version":3,"sources":["../src/FPB/useFPBStore.tsx"],"names":["Mode","emptyLayouts","xxl","xl","lg","md","sm","xs","breakpointsStandard","defaultbreakpoints","defaultCols","useFPBStore","props","force","store","source","rowHeight","margin","layouts","breakpoints","cols","editingTitle","editingItem","i","config","datas","breakpointsArr","recurseEverything","mode","DESIGN","isPreview","PRIVIEW","changeMode","e","target","value","breakpoint","defaultFormField","breakpointsConfig","Object","keys","computedLayout","fromEntries","map","point","hasLayout","length","setDatas","entries","key","data","Component","componentId","flatComponents","setLayouts","_currentLayout","JSON","stringify","setBreakpoint","setBreakpointFromEntry","setBreakpointConfig","values","setBreakpointSettingVisible","deleteItem","jsConfig","onBreakpointChange","onLayoutChange","onResize","onResizeStop","isDraggable","isResizable","operatedItem","setOperatedItem","_layout","_oldItem","newItem","findItem","find","b","findItemInAllBreakpoints","items","item","getItemHeight","h","caclHeight","height","Math","ceil","itemData","breakpointsItems","autoHeight","forEach","maxH","minH","createItem","shortid","generate","componentProps","isFormField","$id","setTimeout","doWindowResize","onItemTypeChange","label","component","formField","onItemPropsChange","field","isEditing","setEditingItem","dealChildren","arr","components","parent","id","children","componentGroup","componentsHasGroup","filter","group","componentsNoGroup","allGroup","Set","returnGroup","filterGroup","push","breakpointSettingVisible"],"mappings":"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","sourcesContent":["import React, { ExoticComponent } from 'react';\r\nimport { useLocalStore, useForceUpdate } from 'mobx-react-lite';\r\nimport { doWindowResize } from './utils';\r\nimport { toJS, set, remove } from 'mobx';\r\nimport 'react-grid-layout/css/styles.css';\r\nimport 'react-resizable/css/styles.css';\r\nimport { Size } from 'react-split-pane';\r\nimport shortid from 'shortid';\r\nimport { ItemSettingProps } from './ItemSettingForm';\r\nimport { FormComponentProps, ValidationRule } from 'antd/lib/form';\r\nimport { RadioChangeEvent } from 'antd/lib/radio';\r\n\r\nconst emptyLayouts: BreakpointsLayouts = {\r\n  xxl: [],\r\n  xl: [],\r\n  lg: [],\r\n  md: [],\r\n  sm: [],\r\n  xs: [],\r\n};\r\ninterface Breakpoints {\r\n  xxl?: number;\r\n  xl?: number;\r\n  lg?: number;\r\n  md?: number;\r\n  sm?: number;\r\n  xs?: number;\r\n}\r\ntype ColNumber = 1 | 2 | 3 | 4 | 6 | 8 | 12 | 24;\r\ninterface Cols {\r\n  xxl?: ColNumber;\r\n  xl?: ColNumber;\r\n  lg?: ColNumber;\r\n  md?: ColNumber;\r\n  sm?: ColNumber;\r\n  xs?: ColNumber;\r\n}\r\n/**\r\n * RGL的基础配置\r\n */\r\nexport interface RGLConfig {\r\n  /**\r\n   * 元素单位高度\r\n   */\r\n  rowHeight?: number;\r\n  /**\r\n   * 元素间距\r\n   */\r\n  margin?: [number, number];\r\n  /**\r\n   *元素的断点布局\r\n   */\r\n  layouts: BreakpointsLayouts;\r\n  /**\r\n   * 响应断点宽度\r\n   */\r\n  breakpoints: Breakpoints;\r\n  /**\r\n   * 断点对应格子数\r\n   */\r\n  cols: Cols;\r\n}\r\n\r\n/**\r\n * RGL元素\r\n */\r\nexport interface RGLItem {\r\n  /**\r\n   * A string corresponding to the component key\r\n   */\r\n  i: string;\r\n  /**\r\n   * These are all in grid units, not pixels\r\n   */\r\n  x: number;\r\n  y: number;\r\n  w: number;\r\n  h: number;\r\n  minW?: number;\r\n  maxW?: number;\r\n  minH?: number;\r\n  maxH?: number;\r\n  // If true equal to `isDraggable: false, isResizable: false`.\r\n  static?: boolean;\r\n  // If false, will not be draggable. Overrides `static`.\r\n  isDraggable?: boolean;\r\n  // If false, will not be resizable. Overrides `static`.\r\n  isResizable?: boolean;\r\n}\r\n\r\n/**\r\n * 断点布局\r\n */\r\nexport interface BreakpointsLayouts {\r\n  xxl?: RGLItem[];\r\n  xl?: RGLItem[];\r\n  lg?: RGLItem[];\r\n  md?: RGLItem[];\r\n  sm?: RGLItem[];\r\n  xs?: RGLItem[];\r\n}\r\n\r\n/**\r\n * 组件基础属性\r\n */\r\ninterface BaseComponentProp {\r\n  /**\r\n   * 属性名称\r\n   */\r\n  label: string;\r\n  /**\r\n   * 类型\r\n   */\r\n  type:\r\n    | 'array:component'\r\n    | 'array:string'\r\n    | 'string'\r\n    | 'number'\r\n    | 'FPR'\r\n    | 'graphql';\r\n  /**\r\n   * 校验规则\r\n   */\r\n  rules?: ValidationRule[];\r\n  /**\r\n   * 组件\r\n   */\r\n  Component?: React.ComponentClass | ExoticComponent | null | React.SFC;\r\n  /**\r\n   * type为array时是否默认增加一个元素\r\n   */\r\n  shouldHaveOne?: boolean;\r\n  /**\r\n   * 存在组件的话可设置组件默认属性\r\n   */\r\n  componentProps?: ComponentProps;\r\n}\r\n/**\r\n * 数组组件属性\r\n */\r\nexport interface ArrayComponentProp extends BaseComponentProp {\r\n  /**\r\n   * 类型\r\n   */\r\n  type: 'array:component';\r\n  /**\r\n   * 组件\r\n   */\r\n  Component: React.ComponentClass | ExoticComponent | React.SFC;\r\n  /**\r\n   * type为array时是否默认增加一个元素\r\n   */\r\n  shouldHaveOne?: boolean;\r\n  /**\r\n   * 存在组件的话可设置组件默认属性\r\n   */\r\n  componentProps?: ComponentProps;\r\n}\r\n/**\r\n * 数组字符串\r\n */\r\nexport interface ArrayStringProp extends BaseComponentProp {\r\n  /**\r\n   * 类型\r\n   */\r\n  type: 'array:string';\r\n  /**\r\n   * type为array时是否默认增加一个元素\r\n   */\r\n  shouldHaveOne?: boolean;\r\n}\r\n\r\nexport interface FPRProp extends BaseComponentProp {\r\n  type: 'FPR';\r\n}\r\n\r\nexport interface StringProp extends BaseComponentProp {\r\n  /**\r\n   * 类型\r\n   */\r\n  type: 'string';\r\n}\r\nexport interface GraphqlProp extends BaseComponentProp {\r\n  /**\r\n   * 类型\r\n   */\r\n  type: 'graphql';\r\n}\r\n\r\nexport interface ComponentProps {\r\n  [propName: string]:\r\n    | FPRProp\r\n    | ArrayComponentProp\r\n    | ArrayStringProp\r\n    | StringProp\r\n    | GraphqlProp;\r\n  children?: FPRProp | ArrayComponentProp | ArrayStringProp | StringProp;\r\n}\r\n\r\n/**\r\n * 组件基础\r\n */\r\nexport interface BaseComponentType {\r\n  /**\r\n   * 主键\r\n   */\r\n  id: string;\r\n  /**\r\n   * 组件名称\r\n   */\r\n  label: string;\r\n  /**\r\n   * 组件引入名称\r\n   */\r\n  name: string;\r\n  /**\r\n   * 子组件\r\n   */\r\n  children?: BaseComponentType[];\r\n  /**\r\n   * 父组件\r\n   */\r\n  parent?: BaseComponentType;\r\n  /**\r\n   * 组件,本想dynamic import 一下，但是webpack不支持\r\n   */\r\n  Component: React.ComponentClass | React.SFC;\r\n  /**\r\n   * 组件属性\r\n   */\r\n  componentProps?: ComponentProps;\r\n  /**\r\n   * 是否可为表单域\r\n   */\r\n  formField?: boolean;\r\n}\r\n\r\n/**\r\n * 组件类型\r\n */\r\nexport interface ComponentType extends BaseComponentType {\r\n  /**\r\n   * 引入路径\r\n   */\r\n  path: string;\r\n  /**\r\n   * 是否为默认引入\r\n   */\r\n  isDefault: boolean;\r\n  /**\r\n   * 分组\r\n   */\r\n  group?: string;\r\n}\r\n\r\nexport interface ComponentGroup {\r\n  [groupName: string]: ComponentType[] | string;\r\n}\r\n\r\nexport interface FPBProps extends FormComponentProps {\r\n  FPR?: boolean;\r\n  forwardRef?: any;\r\n  /**\r\n   * 延迟渲染，在模态框弹出动画非常有用，antd modal设置200即可\r\n   */\r\n  renderDelay?: number;\r\n  defaultDatas?: FPBConfig;\r\n  // /**\r\n  //  * 默认配置\r\n  //  */\r\n  // defaultConfig?: RGLConfig;\r\n  // /**\r\n  //  * 默认布局\r\n  //  */\r\n  // defaultLayouts?: BreakpointsLayouts;\r\n  /**\r\n   * 左侧布局的默认宽度\r\n   */\r\n  contentDefaultSize?: Size;\r\n  /**\r\n   * 导入组件\r\n   */\r\n  components: ComponentType[];\r\n}\r\nexport interface BreakpointsConfig {\r\n  breakpoints: string[];\r\n  cols: Cols;\r\n}\r\n\r\nexport interface FPBConfig {\r\n  /**\r\n   *元素的断点布局\r\n   */\r\n  layouts: BreakpointsLayouts;\r\n  /**\r\n   * 数据源\r\n   */\r\n  datas: FPBItemIndexListInitial;\r\n  /**\r\n   * 断点对应格子数\r\n   */\r\n  cols?: Cols;\r\n  /**\r\n   * 包含断点\r\n   */\r\n  breakpoints?: string[];\r\n}\r\n/**\r\n * pb的store\r\n */\r\nexport interface FPBStore extends RGLConfig, ItemSettingProps {\r\n  editingTitle: string;\r\n  setBreakpointFromEntry(breakpoints: any);\r\n  /**\r\n   * 获取全部配置项以及数据\r\n   */\r\n  config: FPBConfig;\r\n  /**\r\n   * 删除区块\r\n   * @param itemKey 主键\r\n   */\r\n  deleteItem(itemKey: string): void;\r\n  /**\r\n   * 模式\r\n   * @enum Mode\r\n   */\r\n  mode: Mode;\r\n  changeMode: (e: RadioChangeEvent) => void;\r\n  isPreview: boolean;\r\n  /**\r\n   * 索引数据源\r\n   */\r\n  datas: FPBItemIndexList;\r\n  hasLayout: () => boolean;\r\n  breakpoint: 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs';\r\n  /**\r\n   * 断点数组的key\r\n   */\r\n  breakpointsArr: string[];\r\n  /**\r\n   * 获取当前所有断点的布局数组\r\n   */\r\n  computedLayout: BreakpointsLayouts;\r\n  /**\r\n   *断点计算配置用于表单初始值\r\n   */\r\n  breakpointsConfig: BreakpointsConfig;\r\n  /**\r\n   * 布局变更\r\n   * @param currentLayout 当前布局\r\n   * @param layouts 变更后布局\r\n   */\r\n  setLayouts(currentLayout: BreakpointsLayouts, layouts: BreakpointsLayouts);\r\n  /**\r\n   * 数据集合变更\r\n   *\r\n   * @param datas 数据集合\r\n   */\r\n  setDatas(datas);\r\n  /**\r\n   * 设置当前断点\r\n   * @param breakpoint 当前断点\r\n   * @param col 布局列\r\n   */\r\n  setBreakpoint(breakpoint, col?);\r\n  /**\r\n   * RGLConfig\r\n   */\r\n  jsConfig: RGLConfig;\r\n  /**\r\n   * 根据高度计算元素相对的h\r\n   * @param height 高度\r\n   * @param key 主键\r\n   */\r\n  caclHeight(height: number | null | undefined, key: string);\r\n  /**\r\n   * 创建一个元素\r\n   */\r\n  createItem();\r\n  /**\r\n   * 根据主键查询当前断点下的item\r\n   * @param key 主键\r\n   */\r\n  findItem(key: string): RGLItem;\r\n  /**\r\n   * 找出全部断点下的当前item\r\n   */\r\n  findItemInAllBreakpoints(key: string): { [point: string]: RGLItem };\r\n  /**\r\n   * 获取元素当前响应布局高度高度\r\n   * @param key 主键\r\n   */\r\n  getItemHeight(key): number;\r\n  /**\r\n   * item的resize事件\r\n   */\r\n  onResize: RGLItemCallBack;\r\n  onResizeStop: RGLItemCallBack;\r\n  /**\r\n   * 操作中的item\r\n   */\r\n  operatedItem: RGLItem;\r\n  /**\r\n   * 设置操作中数据\r\n   * @param item @interface RGLItem\r\n   */\r\n  setOperatedItem(item: RGLItem);\r\n  /**\r\n   * 编辑中的数据\r\n   */\r\n  editingItem: FPBItem;\r\n  /**\r\n   * 设置编辑中的数据\r\n   * @param item @interface FPBItem\r\n   */\r\n  setEditingItem(item: FPBItem);\r\n  /**\r\n   * 编辑状态\r\n   */\r\n  isEditing: boolean;\r\n  /**\r\n   * 平铺组件，方便查找\r\n   */\r\n  flatComponents: { [id: string]: ComponentType };\r\n  /**\r\n   * 组件的为formField,则编辑时默认表单域为true\r\n   */\r\n  defaultFormField: boolean;\r\n  /**\r\n   * 断点设置弹出\r\n   */\r\n  breakpointSettingVisible: boolean;\r\n  setBreakpointSettingVisible(breakpointSettingVisible: boolean);\r\n  /**\r\n   * 设置布局断点配置\r\n   */\r\n  setBreakpointConfig(values);\r\n}\r\nexport type RGLItemCallBack = (\r\n  layout: RGLItem[],\r\n  /**\r\n   * 旧数据\r\n   */\r\n  oldItem: RGLItem,\r\n  /**\r\n   * 新数据\r\n   */\r\n  newItem: RGLItem,\r\n  placeholder: RGLItem,\r\n  e: MouseEvent,\r\n  element: HTMLElement,\r\n) => void;\r\nexport interface FPBItemIndexList {\r\n  [key: string]: FPBItem;\r\n}\r\nexport interface FPBItemIndexListInitial {\r\n  [key: string]: Omit<FPBItem, 'Component'>;\r\n}\r\n\r\nexport enum Mode {\r\n  /**\r\n   * 设计模式\r\n   */\r\n  DESIGN = 'design',\r\n  /**\r\n   * 预览模式\r\n   */\r\n  PRIVIEW = 'priview',\r\n}\r\n\r\n/**\r\n * fpb元素\r\n */\r\nexport interface FPBItem {\r\n  /**\r\n   * 主键\r\n   */\r\n  i: string;\r\n  /**\r\n   * 组件类\r\n   */\r\n  Component: React.ComponentClass | React.SFC;\r\n  /**\r\n   * 组件属性\r\n   */\r\n  componentProps: { [key: string]: any };\r\n  /**\r\n   * 自适应高度\r\n   */\r\n  autoHeight: boolean;\r\n  /**\r\n   * 组件id\r\n   */\r\n  componentId: string;\r\n  /**\r\n   * 是否为表单域\r\n   */\r\n  isFormField: boolean;\r\n  /**\r\n   * 表单域id,默认为i\r\n   */\r\n  $id: string;\r\n  /**\r\n   * 表单域的label\r\n   */\r\n  label?: string;\r\n}\r\n// xs\t<576px 响应式栅格，可为栅格数或一个包含其他属性的对象\tnumber|object\t-\r\n// sm\t≥576px 响应式栅格，可为栅格数或一个包含其他属性的对象\tnumber|object\t-\r\n// md\t≥768px 响应式栅格，可为栅格数或一个包含其他属性的对象\tnumber|object\t-\r\n// lg\t≥992px 响应式栅格，可为栅格数或一个包含其他属性的对象\tnumber|object\t-\r\n// xl\t≥1200px 响应式栅格，可为栅格数或一个包含其他属性的对象\tnumber|object\t-\r\n// xxl\r\nexport const breakpointsStandard: Breakpoints = {\r\n  xl: 1600,\r\n  lg: 1200,\r\n  md: 992,\r\n  sm: 768,\r\n  xs: 576,\r\n  // xs: 0\r\n};\r\nconst defaultbreakpoints: Breakpoints = {\r\n  lg: breakpointsStandard.lg,\r\n  // md: breakpointsStandard.md\r\n};\r\nconst defaultCols: Cols = { xxl: 12, xl: 12, lg: 8, md: 6, sm: 4, xs: 2 };\r\n\r\nconst useFPBStore = (props): FPBStore => {\r\n  const force = useForceUpdate();\r\n  const store: FPBStore = useLocalStore<\r\n    FPBStore,\r\n    Omit<Omit<FPBProps, 'form'>, 'schema'>\r\n  >(\r\n    source => ({\r\n      rowHeight: 1,\r\n      margin: [0, 0],\r\n      layouts: emptyLayouts,\r\n      breakpoints: defaultbreakpoints,\r\n      cols: defaultCols,\r\n      /*********************** */\r\n      get editingTitle() {\r\n        return store.editingItem && store.editingItem.i;\r\n      },\r\n      get config() {\r\n        return toJS<FPBConfig>(\r\n          {\r\n            datas: store.datas,\r\n            layouts: store.layouts,\r\n            cols: store.cols,\r\n            breakpoints: store.breakpointsArr,\r\n          },\r\n          { recurseEverything: true },\r\n        );\r\n      },\r\n      mode: Mode.DESIGN,\r\n      get isPreview() {\r\n        return store.mode === Mode.PRIVIEW;\r\n      },\r\n      changeMode(e) {\r\n        store.mode = e.target.value;\r\n      },\r\n      datas: {},\r\n      breakpoint: 'lg',\r\n      defaultFormField: true,\r\n      get breakpointsConfig() {\r\n        return {\r\n          breakpoints: store.breakpointsArr,\r\n          cols: store.cols,\r\n        };\r\n      },\r\n      get breakpointsArr() {\r\n        return Object.keys(store.breakpoints);\r\n      },\r\n      get computedLayout() {\r\n        return Object.fromEntries(\r\n          store.breakpointsArr.map(point => [\r\n            point,\r\n            store.layouts[point] || [],\r\n          ]),\r\n        );\r\n      },\r\n      hasLayout() {\r\n        return Object.keys(store.datas).length !== 0;\r\n      },\r\n      setDatas(datas: any) {\r\n        const entries = Object.fromEntries(\r\n          Object.entries(datas).map(([key, data]: [string, any]) => [\r\n            key,\r\n            {\r\n              ...data,\r\n              Component:\r\n                data.componentId &&\r\n                store.flatComponents[data.componentId].Component,\r\n            },\r\n          ]),\r\n        ) as any;\r\n        store.datas = entries;\r\n      },\r\n      setLayouts(_currentLayout, layouts) {\r\n        if (JSON.stringify(store.layouts) == JSON.stringify(layouts)) {\r\n          return;\r\n        }\r\n        console.log('layout-change', toJS(store.layouts), layouts);\r\n        store.layouts = layouts;\r\n      },\r\n      setBreakpoint(breakpoint, _col) {\r\n        console.log('setBreakpoint', breakpoint, store.datas);\r\n\r\n        store.breakpoint = breakpoint;\r\n      },\r\n      setBreakpointFromEntry(breakpoints) {\r\n        store.breakpoints = Object.fromEntries(\r\n          breakpoints.map(point => [point, breakpointsStandard[point]]),\r\n        );\r\n      },\r\n      setBreakpointConfig(values) {\r\n        store.setBreakpointFromEntry(values.breakpoints);\r\n        store.cols = {\r\n          ...store.cols,\r\n          ...values.cols,\r\n        };\r\n        store.setBreakpointSettingVisible(false);\r\n      },\r\n      deleteItem(key) {\r\n        remove(store.datas, key);\r\n        force();\r\n      },\r\n      get jsConfig() {\r\n        return toJS(\r\n          {\r\n            layouts: store.computedLayout,\r\n            rowHeight: store.rowHeight,\r\n            margin: store.margin,\r\n            breakpoints: store.breakpoints,\r\n            cols: store.cols,\r\n            onBreakpointChange: store.setBreakpoint,\r\n            onLayoutChange: store.setLayouts,\r\n            onResize: store.onResize,\r\n            onResizeStop: store.onResizeStop,\r\n            //此处是个问题\r\n            isDraggable: store.editingItem === null && !store.isPreview,\r\n            isResizable: store.editingItem === null && !store.isPreview,\r\n          },\r\n          { recurseEverything: true },\r\n        );\r\n      },\r\n      operatedItem: null,\r\n      setOperatedItem(operatedItem) {\r\n        store.operatedItem = operatedItem;\r\n      },\r\n      onResize(_layout, _oldItem, newItem) {\r\n        store.setOperatedItem(newItem);\r\n      },\r\n      onResizeStop() {\r\n        store.setOperatedItem(null);\r\n      },\r\n      findItem(key) {\r\n        return store.layouts[store.breakpoint].find(b => b.i === key);\r\n      },\r\n      findItemInAllBreakpoints(key) {\r\n        return Object.fromEntries(\r\n          Object.entries(store.layouts).map(([point, items]) => [\r\n            point,\r\n            items.find((item: { i: string }) => item.i === key),\r\n          ]),\r\n        );\r\n      },\r\n      getItemHeight(key) {\r\n        const item = store.findItem(key);\r\n        return item && item.h;\r\n      },\r\n      caclHeight(height, key) {\r\n        const itemData = store.datas[key];\r\n        const item = store.findItem(key);\r\n        const breakpointsItems = store.findItemInAllBreakpoints(key);\r\n        if (!itemData.autoHeight) {\r\n          Object.values(breakpointsItems).forEach(item => {\r\n            if (item) {\r\n              delete item.maxH;\r\n              delete item.minH;\r\n            }\r\n          });\r\n\r\n          return;\r\n        }\r\n        if (height === null || height === undefined) {\r\n          return;\r\n        }\r\n        //store中对应的数据，非布局\r\n        const h = Math.ceil(height / store.rowHeight);\r\n        item.h = h || 30;\r\n        item.maxH = item.h;\r\n        item.minH = item.h;\r\n      },\r\n      createItem() {\r\n        const i = shortid.generate();\r\n        // store.layouts[store.breakpoint].push(item);\r\n        const newItem: FPBItem = {\r\n          i,\r\n          Component: null,\r\n          autoHeight: true,\r\n          componentProps: {},\r\n          componentId: null,\r\n          isFormField: null,\r\n          $id: null,\r\n        };\r\n        set(store.datas, i, newItem);\r\n        force();\r\n        setTimeout(doWindowResize, 0);\r\n      },\r\n      editingItem: null,\r\n      onItemTypeChange(value) {\r\n        if (!value) {\r\n          store.editingItem.Component = null;\r\n          store.editingItem.componentProps = null;\r\n          store.editingItem.isFormField = null;\r\n          delete store.editingItem.label;\r\n          return;\r\n        }\r\n        const component = store.flatComponents[value];\r\n\r\n        store.editingItem.Component = component.Component;\r\n        store.editingItem.componentProps = {};\r\n        if (component.formField) {\r\n          store.editingItem.isFormField = store.defaultFormField;\r\n          // store.editingItem.label = \"\";\r\n          set(store.editingItem, 'label', '');\r\n          // .label = '';\r\n          //这里默认给i值吧\r\n          // store.editingItem.$id = shortid.generate()\r\n        }\r\n\r\n        // Object.entries(component.componentProps).\r\n        // store.editingItem.componentProps = ;\r\n        store.editingItem.componentId = value;\r\n\r\n        // set(store.editingItem, field, value);\r\n      },\r\n      onItemPropsChange(field, value) {\r\n        store.editingItem[field] = value;\r\n      },\r\n      get isEditing() {\r\n        return store.editingItem !== null;\r\n      },\r\n      setEditingItem(editingItem) {\r\n        store.editingItem = editingItem;\r\n      },\r\n      get flatComponents() {\r\n        const flatComponents = {};\r\n        const dealChildren = (\r\n          arr: (ComponentType | BaseComponentType)[] = source.components,\r\n          parent?: ComponentType | BaseComponentType,\r\n        ) => {\r\n          arr.forEach(component => {\r\n            flatComponents[component.id] = component;\r\n            if (parent) {\r\n              component.parent = parent;\r\n            }\r\n            if (component.children) {\r\n              dealChildren(component.children, component);\r\n            }\r\n          });\r\n        };\r\n        dealChildren();\r\n        console.log(flatComponents);\r\n\r\n        return flatComponents;\r\n      },\r\n      get componentGroup() {\r\n        //有分组组件\r\n        const componentsHasGroup = source.components.filter(\r\n          component => component.group,\r\n        );\r\n        //无分组组件\r\n        const componentsNoGroup = source.components.filter(\r\n          component => !component.group,\r\n        );\r\n        //全部分组\r\n        const allGroup = [\r\n          ...new Set(componentsHasGroup.map(component => component.group)),\r\n        ];\r\n        //自动分组\r\n        const returnGroup = [];\r\n        allGroup.forEach(group => {\r\n          const filterGroup = componentsHasGroup.filter(\r\n            component => component.group === group,\r\n          );\r\n          returnGroup.push({ [group]: filterGroup, groupName: group });\r\n        });\r\n        componentsNoGroup.forEach(component => {\r\n          returnGroup.push(component);\r\n        });\r\n        return returnGroup;\r\n      },\r\n      breakpointSettingVisible: false,\r\n      setBreakpointSettingVisible(breakpointSettingVisible) {\r\n        store.breakpointSettingVisible = breakpointSettingVisible;\r\n      },\r\n    }),\r\n    { components: props.components },\r\n  );\r\n  return store;\r\n};\r\n\r\nexport default useFPBStore;\r\n"],"file":"useFPBStore.js"}