{"version":3,"sources":["../src/FPB/FPB.tsx"],"names":["linePadding","ResponsiveGridLayout","Responsive","FPB","props","isInit","settingRef","breakpointFormRef","store","localStore","configVisible","setConfigVisible","mainWidth","setMainWidth","width","settingWidth","setSettingWidth","current","clientWidth","forwardRef","func","setTimeout","window","addEventListener","removeEventListener","doWindowResize","renderDelay","defaultDatas","FPR","mode","Mode","PRIVIEW","setDatas","datas","setBreakpointFromEntry","breakpoints","setLayouts","layouts","FPRPart","form","display","hasLayout","jsConfig","Object","entries","map","key","data","draggableCancelClassName","isDesign","components","draggableCancel","e","position","contentDefaultSize","paddingLeft","paddingTop","paddingRight","background","height","editingTitle","isEditing","_","setEditingItem","padding","overflow","editingItem","componentProps","recurseEverything","onItemTypeChange","onItemPropsChange","componentGroup","flatComponents","isPreview","createItem","setBreakpointSettingVisible","changeMode","DESIGN","breakpointSettingVisible","validateFieldsAndScroll","err","values","setBreakpointConfig","breakpointsConfig","config","FormFPB","create","name","ApolloFPB","client"],"mappings":"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","sourcesContent":["import { Responsive, WidthProvider } from 'react-grid-layout';\r\nimport React, { useRef, useEffect, SFC } from 'react';\r\nimport { Observer, useLocalStore } from 'mobx-react-lite';\r\nimport ReactJson from 'react-json-view';\r\nimport { doWindowResize, getObjectKeysWhenIsArray } from './utils';\r\nimport 'react-grid-layout/css/styles.css';\r\nimport 'react-resizable/css/styles.css';\r\nimport { Empty, Button, Form, Drawer, Radio, Modal } from 'antd';\r\nimport SplitPane from 'react-split-pane';\r\nimport ItemSettingForm from './ItemSettingForm';\r\nimport ObservableBlock from './ObservableBlock';\r\nimport ObservableBlockContainer from './ObservableBlockContainer';\r\nimport { Provider } from './FormContext';\r\nimport { debounce } from 'lodash';\r\nimport BreakpointForm from './BreakpointForm';\r\nimport useFPBStore, { FPBProps, Mode, ApolloFPBProps } from './useFPBStore';\r\nimport { toJS } from 'mobx';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport CalText from './CalText';\r\nimport FullScreenModal from './FullScreenModal';\r\nconst linePadding = 5;\r\nconst ResponsiveGridLayout = WidthProvider(Responsive);\r\nconst FPB: React.SFC<FPBProps> = props => {\r\n  const isInit = useRef(false);\r\n  const settingRef: any = useRef();\r\n  const breakpointFormRef = useRef<any>();\r\n  const store = useFPBStore(props);\r\n  const localStore = useLocalStore(() => ({\r\n    configVisible: false,\r\n    setConfigVisible(configVisible) {\r\n      localStore.configVisible = configVisible;\r\n    },\r\n    mainWidth: 0,\r\n    setMainWidth(width) {\r\n      localStore.mainWidth = width;\r\n    },\r\n    settingWidth: 0,\r\n    setSettingWidth() {\r\n      if (settingRef.current && settingRef.current.clientWidth) {\r\n        localStore.settingWidth =\r\n          settingRef.current && settingRef.current.clientWidth;\r\n      }\r\n    },\r\n  }));\r\n  if (props.forwardRef) {\r\n    props.forwardRef.current = store;\r\n  }\r\n  useEffect(() => {\r\n    /**\r\n     * 初始化一下setting的宽度\r\n     */\r\n    const func = debounce(\r\n      () => setTimeout(() => localStore.setSettingWidth(), 0),\r\n      200,\r\n    );\r\n    func();\r\n    window.addEventListener('resize', func);\r\n    return () => {\r\n      window.removeEventListener('resize', func);\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    if (!isInit.current) {\r\n      isInit.current = true;\r\n      setTimeout(doWindowResize, props.renderDelay || 0);\r\n    }\r\n    if (props.defaultDatas) {\r\n      if (props.FPR) {\r\n        store.mode = Mode.PRIVIEW;\r\n      }\r\n      store.setDatas(props.defaultDatas.datas);\r\n      store.setBreakpointFromEntry(props.defaultDatas.breakpoints);\r\n      store.setLayouts([] as any, props.defaultDatas.layouts);\r\n      //模态框动画弹出需要加renderDelay\r\n\r\n      // doWindowResize();\r\n    }\r\n  }, [props.defaultDatas, props.renderDelay]);\r\n  useEffect(() => {\r\n    console.log('mount');\r\n  }, []);\r\n  console.log('render', store);\r\n  const { FPR = false } = props;\r\n  const FPRPart = (\r\n    <Provider value={{ form: props.form }}>\r\n      <Observer>\r\n        {() => (\r\n          <ResponsiveGridLayout\r\n            // useCSSTransforms={false}\r\n            style={{ display: !store.hasLayout() ? 'none' : 'block' }}\r\n            className=\"layout\"\r\n            {...store.jsConfig}\r\n          >\r\n            {Object.entries(store.datas).map(([key, data]) => {\r\n              return (\r\n                <div className={store.draggableCancelClassName} key={key}>\r\n                  <Observer>\r\n                    {() =>\r\n                      store.isDesign && (\r\n                        <ObservableBlockContainer\r\n                          store={store}\r\n                          itemKey={key}\r\n                          data={data}\r\n                        />\r\n                      )\r\n                    }\r\n                  </Observer>\r\n\r\n                  <ObservableBlock\r\n                    store={store}\r\n                    i={key}\r\n                    components={props.components}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </ResponsiveGridLayout>\r\n        )}\r\n      </Observer>\r\n    </Provider>\r\n  );\r\n  if (FPR) {\r\n    return FPRPart;\r\n  }\r\n  return (\r\n    <>\r\n      {/* 此处在预览模式下取消transition */}\r\n      <Observer>\r\n        {() => (\r\n          <style>\r\n            {store.draggableCancel\r\n              ? `\r\n        .react-grid-item{\r\n          transition:none!important\r\n        }\r\n        .react-grid-layout{\r\n          transition:none!important\r\n        }\r\n        ${\r\n          store.draggableCancel\r\n            ? `.react-grid-item > .react-resizable-handle{\r\n          display:none;\r\n        }`\r\n            : null\r\n        }\r\n        `\r\n              : null}\r\n          </style>\r\n        )}\r\n      </Observer>\r\n\r\n      <SplitPane\r\n        className=\"FPB\"\r\n        onChange={e => {\r\n          localStore.setSettingWidth();\r\n          localStore.setMainWidth(e - 10);\r\n        }}\r\n        onDragFinished={doWindowResize}\r\n        paneStyle={{ position: `relative` }}\r\n        style={{ position: 'relative' }}\r\n        defaultSize={props.contentDefaultSize || `50%`}\r\n        minSize={479}\r\n        maxSize={1600}\r\n      >\r\n        <div\r\n          style={{\r\n            position: `relative`,\r\n            paddingLeft: linePadding,\r\n            paddingTop: linePadding,\r\n            paddingRight: linePadding,\r\n          }}\r\n          key={'builder'}\r\n        >\r\n          <Observer>{() => <CalText width={localStore.mainWidth} />}</Observer>\r\n          <Observer>\r\n            {() => (\r\n              <>\r\n                <Empty\r\n                  style={{ display: store.hasLayout() ? 'none' : 'block' }}\r\n                  description={'暂无元素'}\r\n                />\r\n                {FPRPart}\r\n              </>\r\n            )}\r\n          </Observer>\r\n        </div>\r\n        <div\r\n          ref={settingRef}\r\n          key=\"setting\"\r\n          style={{\r\n            background: `#fff`,\r\n            height: `100%`,\r\n            paddingLeft: linePadding,\r\n          }}\r\n        >\r\n          <Observer>\r\n            {() => {\r\n              return (\r\n                <Drawer\r\n                  destroyOnClose\r\n                  title={store.editingTitle}\r\n                  placement=\"right\"\r\n                  width={`100%`}\r\n                  closable={store.isEditing}\r\n                  onClose={_ => store.setEditingItem(null)}\r\n                  visible={store.isEditing}\r\n                  getContainer={false}\r\n                  style={{ position: 'absolute', height: `100%` }}\r\n                  drawerStyle={{  height: `100%` }}\r\n                  bodyStyle={{\r\n                    padding: 0,\r\n                    height: `calc( 100% - 54.6px )`,\r\n                    overflow: `auto`,\r\n                  }}\r\n                >\r\n                  {store.isEditing && (\r\n                    <ItemSettingForm\r\n                      parentStore={localStore}\r\n                      initialKeyCounter={\r\n                        (store.editingItem &&\r\n                          getObjectKeysWhenIsArray(\r\n                            toJS(store.editingItem.componentProps, {\r\n                              recurseEverything: true,\r\n                            }) || {},\r\n                            'componentProps',\r\n                          )) ||\r\n                        {}\r\n                      }\r\n                      components={props.components}\r\n                      item={store.editingItem}\r\n                      onItemTypeChange={store.onItemTypeChange}\r\n                      onItemPropsChange={store.onItemPropsChange}\r\n                      componentGroup={store.componentGroup}\r\n                      flatComponents={store.flatComponents}\r\n                    />\r\n                  )}\r\n                </Drawer>\r\n              );\r\n            }}\r\n          </Observer>\r\n\r\n          <Form layout=\"inline\">\r\n            <Form.Item>\r\n              <Observer>\r\n                {() => (\r\n                  <Button\r\n                    type=\"primary\"\r\n                    icon=\"plus\"\r\n                    disabled={store.isPreview}\r\n                    onClick={store.createItem}\r\n                  >\r\n                    添加元素\r\n                  </Button>\r\n                )}\r\n              </Observer>\r\n            </Form.Item>\r\n            <Form.Item label=\"断点\">\r\n              <Observer>\r\n                {() => (\r\n                  <Button\r\n                    disabled={store.isPreview}\r\n                    onClick={_ => store.setBreakpointSettingVisible(true)}\r\n                  >\r\n                    断点\r\n                  </Button>\r\n                )}\r\n              </Observer>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button onClick={_ => localStore.setConfigVisible(true)}>\r\n                查看配置\r\n              </Button>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Observer>\r\n                {() => (\r\n                  <Radio.Group\r\n                    buttonStyle=\"solid\"\r\n                    onChange={store.changeMode}\r\n                    value={store.mode}\r\n                  >\r\n                    <Radio.Button value={Mode.DESIGN}>设计</Radio.Button>\r\n                    <Radio.Button value={Mode.PRIVIEW}>预览</Radio.Button>\r\n                  </Radio.Group>\r\n                )}\r\n              </Observer>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </SplitPane>\r\n      <Observer>\r\n        {() => (\r\n          <Modal\r\n            centered\r\n            destroyOnClose\r\n            maskClosable={false}\r\n            title={'设置断点'}\r\n            visible={store.breakpointSettingVisible}\r\n            onOk={_ =>\r\n              breakpointFormRef.current.validateFieldsAndScroll(\r\n                (err, values) => {\r\n                  if (err) {\r\n                    return;\r\n                  }\r\n                  store.setBreakpointConfig(values);\r\n                },\r\n              )\r\n            }\r\n            onCancel={_ => store.setBreakpointSettingVisible(false)}\r\n          >\r\n            <BreakpointForm\r\n              ref={breakpointFormRef}\r\n              initialData={store.breakpointsConfig}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Observer>\r\n      <Observer>\r\n        {() => (\r\n          <FullScreenModal\r\n            footer={null}\r\n            onCancel={_ => localStore.setConfigVisible(false)}\r\n            visible={localStore.configVisible}\r\n          >\r\n            <ReactJson collapsed={1} indentWidth={10} src={store.config} />\r\n          </FullScreenModal>\r\n        )}\r\n      </Observer>\r\n    </>\r\n  );\r\n};\r\nconst FormFPB = Form.create<FPBProps>({ name: 'FPB' })(FPB);\r\n\r\nexport const ApolloFPB: SFC<Omit<ApolloFPBProps, 'form'>> = ({\r\n  client,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <FormFPB {...props} />\r\n    </ApolloProvider>\r\n  );\r\n};\r\nexport { FormFPB as default };\r\n"],"file":"FPB.js"}