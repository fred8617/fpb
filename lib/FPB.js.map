{"version":3,"sources":["../src/FPB/FPB.tsx"],"names":["ResponsiveGridLayout","Responsive","FPB","React","memo","props","isInit","setIsInit","breakpointFormRef","store","forwardRef","current","defaultDatas","FPR","mode","Mode","PRIVIEW","setDatas","datas","setBreakpointFromEntry","breakpoints","setLayouts","layouts","setTimeout","doWindowResize","renderDelay","console","log","FPRPart","form","display","hasLayout","jsConfig","Object","entries","map","key","data","DESIGN","components","isPreview","position","contentDefaultSize","editingItem","i","isEditing","setEditingItem","padding","height","overflow","componentProps","recurseEverything","onItemTypeChange","onItemPropsChange","componentGroup","flatComponents","createItem","setBreakpointSettingVisible","JSON","stringify","config","changeMode","breakpointSettingVisible","validateFieldsAndScroll","err","values","setBreakpointConfig","breakpointsConfig","FormFPB","create","name"],"mappings":"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","sourcesContent":["import { Responsive, WidthProvider } from 'react-grid-layout';\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport { Observer } from 'mobx-react-lite';\r\nimport { doWindowResize, getObjectKeysWhenIsArray } from './utils';\r\nimport 'react-grid-layout/css/styles.css';\r\nimport 'react-resizable/css/styles.css';\r\nimport { Empty, Button, Form, Drawer, Radio, Modal } from 'antd';\r\nimport SplitPane from 'react-split-pane';\r\nimport ItemSettingForm from './ItemSettingForm';\r\nimport ObservableBlock from './ObservableBlock';\r\nimport ObservableBlockContainer from './ObservableBlockContainer';\r\nimport { Provider } from './FormContext';\r\nimport BreakpointForm from './BreakpointForm';\r\nimport useFPBStore, { FPBProps, Mode } from './useFPBStore';\r\nimport { toJS } from 'mobx';\r\nconst ResponsiveGridLayout = WidthProvider(Responsive);\r\nconst FPB: React.SFC<FPBProps> = React.memo(props => {\r\n  const [isInit, setIsInit] = useState(false);\r\n  const breakpointFormRef = useRef<any>();\r\n  const store = useFPBStore(props);\r\n  if (props.forwardRef) {\r\n    props.forwardRef.current = store;\r\n  }\r\n  useEffect(() => {\r\n    if (!isInit) {\r\n      if (props.defaultDatas) {\r\n        if (props.FPR) {\r\n          store.mode = Mode.PRIVIEW;\r\n        }\r\n        store.setDatas(props.defaultDatas.datas);\r\n        store.setBreakpointFromEntry(props.defaultDatas.breakpoints);\r\n        store.setLayouts([] as any, props.defaultDatas.layouts);\r\n        //模态框动画弹出需要加renderDelay\r\n        setIsInit(true);\r\n        setTimeout(doWindowResize, props.renderDelay || 0);\r\n        // doWindowResize();\r\n      }\r\n    }\r\n  }, [props.defaultDatas, props.renderDelay, isInit]);\r\n  useEffect(() => {\r\n    console.log('mount');\r\n  }, []);\r\n  console.log('render', store);\r\n  const { FPR = false } = props;\r\n  const FPRPart = (\r\n    <Provider value={{ form: props.form }}>\r\n      <Observer>\r\n        {() => (\r\n          <ResponsiveGridLayout\r\n            // useCSSTransforms={false}\r\n            style={{ display: !store.hasLayout() ? 'none' : 'block' }}\r\n            className=\"layout\"\r\n            {...store.jsConfig}\r\n          >\r\n            {Object.entries(store.datas).map(([key, data]) => {\r\n              return (\r\n                <div key={key}>\r\n                  <Observer>\r\n                    {() =>\r\n                      store.mode === Mode.DESIGN && (\r\n                        <ObservableBlockContainer\r\n                          store={store}\r\n                          itemKey={key}\r\n                          data={data}\r\n                        />\r\n                      )\r\n                    }\r\n                  </Observer>\r\n\r\n                  <ObservableBlock\r\n                    store={store}\r\n                    i={key}\r\n                    components={props.components}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </ResponsiveGridLayout>\r\n        )}\r\n      </Observer>\r\n    </Provider>\r\n  );\r\n  if (FPR) {\r\n    return FPRPart;\r\n  }\r\n  return (\r\n    <>\r\n      {/* 此处在预览模式下取消transition */}\r\n      <Observer>\r\n        {() => (\r\n          <style>\r\n            {store.isPreview\r\n              ? `\r\n        .react-grid-item{\r\n          transition:none!important\r\n        }\r\n        .react-grid-layout{\r\n          transition:none!important\r\n        }\r\n        `\r\n              : null}\r\n          </style>\r\n        )}\r\n      </Observer>\r\n      <SplitPane\r\n        className=\"FPB\"\r\n        onDragFinished={doWindowResize}\r\n        paneStyle={{ position: `relative` }}\r\n        style={{ position: 'relative' }}\r\n        defaultSize={props.contentDefaultSize || `50%`}\r\n        minSize={479}\r\n        maxSize={1600}\r\n      >\r\n        <div style={{ position: `relative` }} key={'builder'}>\r\n          <Observer>\r\n            {() => (\r\n              <>\r\n                <Empty\r\n                  style={{ display: store.hasLayout() ? 'none' : 'block' }}\r\n                  description={'暂无元素'}\r\n                />\r\n                {FPRPart}\r\n              </>\r\n            )}\r\n          </Observer>\r\n        </div>\r\n        <div key=\"setting\">\r\n          <Observer>\r\n            {() => {\r\n              return (\r\n                <Drawer\r\n                  destroyOnClose\r\n                  title={store.editingItem && store.editingItem.i}\r\n                  placement=\"right\"\r\n                  width={`100%`}\r\n                  closable={store.isEditing}\r\n                  onClose={_ => store.setEditingItem(null)}\r\n                  visible={store.isEditing}\r\n                  getContainer={false}\r\n                  style={{ position: 'absolute' }}\r\n                  bodyStyle={{\r\n                    padding: 0,\r\n                    height: `calc( 100% - 54.6px )`,\r\n                    overflow: `auto`,\r\n                  }}\r\n                >\r\n                  {store.isEditing && (\r\n                    <ItemSettingForm\r\n                      initialKeyCounter={\r\n                        (store.editingItem &&\r\n                          getObjectKeysWhenIsArray(\r\n                            toJS(store.editingItem.componentProps, {\r\n                              recurseEverything: true,\r\n                            }) || {},\r\n                            'componentProps',\r\n                          )) ||\r\n                        {}\r\n                      }\r\n                      components={props.components}\r\n                      item={store.editingItem}\r\n                      onItemTypeChange={store.onItemTypeChange}\r\n                      onItemPropsChange={store.onItemPropsChange}\r\n                      componentGroup={store.componentGroup}\r\n                      flatComponents={store.flatComponents}\r\n                    />\r\n                  )}\r\n                </Drawer>\r\n              );\r\n            }}\r\n          </Observer>\r\n\r\n          <Form layout=\"inline\">\r\n            <Form.Item>\r\n              <Observer>\r\n                {() => (\r\n                  <Button\r\n                    type=\"primary\"\r\n                    icon=\"plus\"\r\n                    disabled={store.isPreview}\r\n                    onClick={store.createItem}\r\n                  >\r\n                    添加元素\r\n                  </Button>\r\n                )}\r\n              </Observer>\r\n            </Form.Item>\r\n            <Form.Item label=\"断点\">\r\n              <Observer>\r\n                {() => (\r\n                  <Button\r\n                    disabled={store.isPreview}\r\n                    onClick={_ => store.setBreakpointSettingVisible(true)}\r\n                  >\r\n                    断点\r\n                  </Button>\r\n                )}\r\n              </Observer>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button onClick={_ => console.log(JSON.stringify(store.config))}>\r\n                获取配置\r\n              </Button>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Observer>\r\n                {() => (\r\n                  <Radio.Group\r\n                    buttonStyle=\"solid\"\r\n                    onChange={store.changeMode}\r\n                    value={store.mode}\r\n                  >\r\n                    <Radio.Button value={Mode.DESIGN}>设计</Radio.Button>\r\n                    <Radio.Button value={Mode.PRIVIEW}>预览</Radio.Button>\r\n                  </Radio.Group>\r\n                )}\r\n              </Observer>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </SplitPane>\r\n      <Observer>\r\n        {() => (\r\n          <Modal\r\n            centered\r\n            destroyOnClose\r\n            maskClosable={false}\r\n            title={'设置断点'}\r\n            visible={store.breakpointSettingVisible}\r\n            onOk={_ =>\r\n              breakpointFormRef.current.validateFieldsAndScroll(\r\n                (err, values) => {\r\n                  if (err) {\r\n                    return;\r\n                  }\r\n                  store.setBreakpointConfig(values);\r\n                },\r\n              )\r\n            }\r\n            onCancel={_ => store.setBreakpointSettingVisible(false)}\r\n          >\r\n            <BreakpointForm\r\n              ref={breakpointFormRef}\r\n              initialData={store.breakpointsConfig}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Observer>\r\n    </>\r\n  );\r\n});\r\nconst FormFPB = Form.create<FPBProps>({ name: 'FPB' })(FPB);\r\nexport { FormFPB as default };\r\n"],"file":"FPB.js"}