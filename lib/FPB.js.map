{"version":3,"sources":["../src/fpb/FPB.tsx"],"names":["linePadding","ResponsiveGridLayout","Responsive","FPB","props","isInit","settingRef","breakpointFormRef","store","localStore","configVisible","setConfigVisible","mainWidth","setMainWidth","width","settingWidth","setSettingWidth","current","clientWidth","setBreakpointFromEntry","Object","keys","breakpoints","breakpointDiff","forwardRef","layouts","func","setTimeout","window","addEventListener","removeEventListener","defaultDatas","setLayouts","doWindowResize","renderDelay","FPR","mode","Mode","PRIVIEW","setDatas","datas","FPRPart","form","display","hasLayout","jsConfig","entries","map","key","data","draggableCancelClassName","isDesign","components","showPart","builderPart","layout","position","paddingLeft","paddingTop","paddingRight","draggableCancel","e","overflow","contentDefaultSize","background","height","editingTitle","isEditing","_","setEditingItem","padding","editingItem","componentProps","recurseEverything","onItemTypeChange","onItemPropsChange","componentGroup","flatComponents","isPreview","createItem","setBreakpointSettingVisible","changeMode","DESIGN","renderActions","breakpointSettingVisible","validateFieldsAndScroll","err","values","setBreakpointConfig","breakpointsConfig","config","FormFPB","create","name","ApolloFPB","client"],"mappings":"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","sourcesContent":["import { Responsive, WidthProvider } from 'react-grid-layout';\r\nimport React, { useRef, useEffect, SFC, useMemo } from 'react';\r\nimport { Observer, useLocalStore } from 'mobx-react-lite';\r\nimport ReactJson from 'react-json-view';\r\nimport { doWindowResize, getObjectKeysWhenIsArray } from './utils';\r\nimport 'react-grid-layout/css/styles.css';\r\nimport 'react-resizable/css/styles.css';\r\nimport { Empty, Button, Form, Drawer, Radio, Modal } from 'antd';\r\nimport SplitPane from 'react-split-pane';\r\nimport ItemSettingForm from './ItemSettingForm';\r\nimport ObservableBlock from './ObservableBlock';\r\nimport ObservableBlockContainer from './ObservableBlockContainer';\r\nimport { Provider } from './FormContext';\r\nimport { debounce } from 'lodash';\r\nimport BreakpointForm from './BreakpointForm';\r\nimport useFPBStore, { FPBProps, Mode, ApolloFPBProps } from './useFPBStore';\r\nimport { toJS } from 'mobx';\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport CalText from './CalText';\r\nimport FullScreenModal from './FullScreenModal';\r\nconst linePadding = 5;\r\nconst ResponsiveGridLayout = WidthProvider(Responsive);\r\nconst FPB: React.SFC<FPBProps> = props => {\r\n  const isInit = useRef(false);\r\n  const settingRef: any = useRef();\r\n  const breakpointFormRef = useRef<any>();\r\n  const store = useFPBStore(props);\r\n  const localStore = useLocalStore(() => ({\r\n    configVisible: false,\r\n    setConfigVisible(configVisible) {\r\n      localStore.configVisible = configVisible;\r\n    },\r\n    mainWidth: 0,\r\n    setMainWidth(width) {\r\n      localStore.mainWidth = width;\r\n    },\r\n    settingWidth: 0,\r\n    setSettingWidth() {\r\n      if (settingRef.current && settingRef.current.clientWidth) {\r\n        localStore.settingWidth =\r\n          settingRef.current && settingRef.current.clientWidth;\r\n      }\r\n    },\r\n  }));\r\n  useEffect(() => {\r\n    store.setBreakpointFromEntry(\r\n      Object.keys(store.breakpoints),\r\n      props.breakpointDiff,\r\n    );\r\n  }, [props.breakpointDiff]);\r\n  if (props.forwardRef) {\r\n    props.forwardRef.current = store;\r\n  }\r\n  useEffect(() => {\r\n    console.log('layout change & doWindowResize');\r\n    doWindowResize();\r\n  }, [store.layouts]);\r\n  useEffect(() => {\r\n    /**\r\n     * 初始化一下setting的宽度\r\n     */\r\n    const func = debounce(\r\n      () => setTimeout(() => localStore.setSettingWidth(), 0),\r\n      200,\r\n    );\r\n    func();\r\n    window.addEventListener('resize', func);\r\n    return () => {\r\n      window.removeEventListener('resize', func);\r\n    };\r\n  }, []);\r\n  useEffect(() => {\r\n    if (!isInit.current) {\r\n      isInit.current = true;\r\n      if (props.defaultDatas) {\r\n        store.setLayouts([] as any, props.defaultDatas.layouts);\r\n      }\r\n\r\n      setTimeout(doWindowResize, props.renderDelay || 0);\r\n    }\r\n    if (props.defaultDatas) {\r\n      if (props.FPR) {\r\n        store.mode = Mode.PRIVIEW;\r\n      }\r\n      store.setDatas(props.defaultDatas.datas);\r\n      store.setBreakpointFromEntry(\r\n        props.defaultDatas.breakpoints,\r\n        props.breakpointDiff,\r\n      );\r\n      // store.setLayouts([] as any, props.defaultDatas.layouts);\r\n      setTimeout(doWindowResize, props.renderDelay || 0);\r\n      //模态框动画弹出需要加renderDelay\r\n\r\n      // doWindowResize();\r\n    }\r\n  }, [props.defaultDatas, props.renderDelay]);\r\n\r\n  useEffect(() => {\r\n    console.log('mount');\r\n  }, []);\r\n  console.log('render', store);\r\n  const { FPR = false } = props;\r\n  const FPRPart = (\r\n    <Provider value={{ form: props.form }}>\r\n      <Observer>\r\n        {() => (\r\n          <ResponsiveGridLayout\r\n            // compactType={'horizontal'}\r\n            // useCSSTransforms={false}\r\n            style={{ display: !store.hasLayout() ? 'none' : 'block' }}\r\n            className=\"layout\"\r\n            {...store.jsConfig}\r\n          >\r\n            {Object.entries(store.datas).map(([key, data]) => {\r\n              return (\r\n                <div className={store.draggableCancelClassName} key={key}>\r\n                  <Observer>\r\n                    {() =>\r\n                      store.isDesign && (\r\n                        <ObservableBlockContainer\r\n                          store={store}\r\n                          itemKey={key}\r\n                          data={data}\r\n                        />\r\n                      )\r\n                    }\r\n                  </Observer>\r\n\r\n                  <ObservableBlock\r\n                    store={store}\r\n                    i={key}\r\n                    components={props.components}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </ResponsiveGridLayout>\r\n        )}\r\n      </Observer>\r\n    </Provider>\r\n  );\r\n  if (FPR) {\r\n    return FPRPart;\r\n  }\r\n  const showPart = (\r\n    <>\r\n      <Observer>{() => <CalText width={localStore.mainWidth} />}</Observer>\r\n      <Observer>\r\n        {() => (\r\n          <>\r\n            <Empty\r\n              style={{ display: store.hasLayout() ? 'none' : 'block' }}\r\n              description={'暂无元素'}\r\n            />\r\n            {FPRPart}\r\n          </>\r\n        )}\r\n      </Observer>\r\n    </>\r\n  );\r\n  const builderPart = props.layout ? (\r\n    <div key={'builder'} style={{ position: `relative` }}>\r\n      {props.layout(showPart)}\r\n    </div>\r\n  ) : (\r\n    <div\r\n      style={{\r\n        position: `relative`,\r\n        paddingLeft: linePadding,\r\n        paddingTop: linePadding,\r\n        paddingRight: linePadding,\r\n      }}\r\n      key={'builder'}\r\n    >\r\n      {showPart}\r\n    </div>\r\n  );\r\n  return (\r\n    <>\r\n      {/* 此处在预览模式下取消transition */}\r\n      <Observer>\r\n        {() => (\r\n          <style>\r\n            {store.draggableCancel\r\n              ? `\r\n        .react-grid-item{\r\n          transition:none!important\r\n        }\r\n        .react-grid-layout{\r\n          transition:none!important\r\n        }\r\n        ${\r\n          store.draggableCancel\r\n            ? `.react-grid-item > .react-resizable-handle{\r\n          display:none;\r\n        }`\r\n            : null\r\n        }\r\n        `\r\n              : null}\r\n          </style>\r\n        )}\r\n      </Observer>\r\n\r\n      <SplitPane\r\n        className=\"FPB\"\r\n        onChange={e => {\r\n          localStore.setSettingWidth();\r\n          localStore.setMainWidth(e - (props.layout ? 0 : 10));\r\n        }}\r\n        onDragFinished={doWindowResize}\r\n        pane1Style={{ overflow: `auto` }}\r\n        paneStyle={{ position: `relative` }}\r\n        style={{ position: 'relative' }}\r\n        defaultSize={props.contentDefaultSize || `50%`}\r\n        minSize={479}\r\n        maxSize={1600}\r\n      >\r\n        {builderPart}\r\n        <div\r\n          ref={settingRef}\r\n          key=\"setting\"\r\n          style={{\r\n            background: `#fff`,\r\n            height: `100%`,\r\n            paddingLeft: linePadding,\r\n          }}\r\n        >\r\n          <Observer>\r\n            {() => {\r\n              return (\r\n                <Drawer\r\n                  destroyOnClose\r\n                  title={store.editingTitle}\r\n                  placement=\"right\"\r\n                  width={`100%`}\r\n                  closable={store.isEditing}\r\n                  onClose={_ => store.setEditingItem(null)}\r\n                  visible={store.isEditing}\r\n                  getContainer={false}\r\n                  style={{ position: 'absolute', height: `100%` }}\r\n                  drawerStyle={{ height: `100%` }}\r\n                  bodyStyle={{\r\n                    padding: 0,\r\n                    height: `calc( 100% - 54.6px )`,\r\n                    overflow: `auto`,\r\n                  }}\r\n                >\r\n                  {store.isEditing && (\r\n                    <ItemSettingForm\r\n                      parentStore={localStore}\r\n                      initialKeyCounter={\r\n                        (store.editingItem &&\r\n                          getObjectKeysWhenIsArray(\r\n                            toJS(store.editingItem.componentProps, {\r\n                              recurseEverything: true,\r\n                            }) || {},\r\n                            'componentProps',\r\n                          )) ||\r\n                        {}\r\n                      }\r\n                      components={props.components}\r\n                      item={store.editingItem}\r\n                      onItemTypeChange={store.onItemTypeChange}\r\n                      onItemPropsChange={store.onItemPropsChange}\r\n                      componentGroup={store.componentGroup}\r\n                      flatComponents={store.flatComponents}\r\n                    />\r\n                  )}\r\n                </Drawer>\r\n              );\r\n            }}\r\n          </Observer>\r\n\r\n          <Form layout=\"inline\">\r\n            <Form.Item>\r\n              <Observer>\r\n                {() => (\r\n                  <Button\r\n                    type=\"primary\"\r\n                    icon=\"plus\"\r\n                    disabled={store.isPreview}\r\n                    onClick={debounce(store.createItem, 50)}\r\n                  >\r\n                    添加元素\r\n                  </Button>\r\n                )}\r\n              </Observer>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Observer>\r\n                {() => (\r\n                  <Button\r\n                    disabled={store.isPreview}\r\n                    onClick={_ => store.setBreakpointSettingVisible(true)}\r\n                  >\r\n                    断点设置\r\n                  </Button>\r\n                )}\r\n              </Observer>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button onClick={_ => localStore.setConfigVisible(true)}>\r\n                查看配置\r\n              </Button>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Observer>\r\n                {() => (\r\n                  <Radio.Group\r\n                    buttonStyle=\"solid\"\r\n                    onChange={store.changeMode}\r\n                    value={store.mode}\r\n                  >\r\n                    <Radio.Button value={Mode.DESIGN}>设计</Radio.Button>\r\n                    <Radio.Button value={Mode.PRIVIEW}>预览</Radio.Button>\r\n                  </Radio.Group>\r\n                )}\r\n              </Observer>\r\n            </Form.Item>\r\n            {props.renderActions && props.renderActions()}\r\n          </Form>\r\n        </div>\r\n      </SplitPane>\r\n      <Observer>\r\n        {() => (\r\n          <Modal\r\n            centered\r\n            destroyOnClose\r\n            maskClosable={false}\r\n            title={'设置断点'}\r\n            visible={store.breakpointSettingVisible}\r\n            onOk={_ =>\r\n              breakpointFormRef.current.validateFieldsAndScroll(\r\n                (err, values) => {\r\n                  if (err) {\r\n                    return;\r\n                  }\r\n                  store.setBreakpointConfig(values, props.breakpointDiff);\r\n                },\r\n              )\r\n            }\r\n            onCancel={_ => store.setBreakpointSettingVisible(false)}\r\n          >\r\n            <BreakpointForm\r\n              ref={breakpointFormRef}\r\n              initialData={store.breakpointsConfig}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Observer>\r\n      <Observer>\r\n        {() => (\r\n          <FullScreenModal\r\n            footer={null}\r\n            onCancel={_ => localStore.setConfigVisible(false)}\r\n            visible={localStore.configVisible}\r\n          >\r\n            <ReactJson collapsed={1} indentWidth={10} src={store.config} />\r\n          </FullScreenModal>\r\n        )}\r\n      </Observer>\r\n    </>\r\n  );\r\n};\r\nconst FormFPB = Form.create<FPBProps>({ name: 'FPB' })(FPB);\r\n\r\nexport const ApolloFPB: SFC<Omit<ApolloFPBProps, 'form'>> = ({\r\n  client,\r\n  ...props\r\n}) => {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <FormFPB {...props} />\r\n    </ApolloProvider>\r\n  );\r\n};\r\nexport { FormFPB as default };\r\n"],"file":"FPB.js"}