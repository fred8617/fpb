{"version":3,"sources":["../src/FPB/FPB.tsx"],"names":["ResponsiveGridLayout","Responsive","FPB","React","memo","props","breakpointFormRef","store","forwardRef","current","defaultDatas","FPR","mode","Mode","PRIVIEW","setDatas","datas","setBreakpointFromEntry","breakpoints","setLayouts","layouts","setTimeout","doWindowResize","renderDelay","console","log","FPRPart","form","display","hasLayout","jsConfig","Object","entries","map","key","data","DESIGN","components","isPreview","position","contentDefaultSize","editingItem","i","isEditing","_","setEditingItem","padding","height","overflow","componentProps","recurseEverything","onItemTypeChange","onItemPropsChange","componentGroup","flatComponents","createItem","setBreakpointSettingVisible","JSON","stringify","config","changeMode","breakpointSettingVisible","validateFieldsAndScroll","err","values","setBreakpointConfig","breakpointsConfig","FormFPB","create","name"],"mappings":"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","sourcesContent":["import { Responsive, WidthProvider } from 'react-grid-layout';\r\nimport React, { useRef, useEffect } from 'react';\r\nimport { Observer } from 'mobx-react-lite';\r\nimport { doWindowResize, getObjectKeysWhenIsArray } from './utils';\r\nimport 'react-grid-layout/css/styles.css';\r\nimport 'react-resizable/css/styles.css';\r\nimport { Empty, Button, Form, Drawer, Radio, Modal } from 'antd';\r\nimport SplitPane from 'react-split-pane';\r\nimport ItemSettingForm from './ItemSettingForm';\r\nimport ObservableBlock from './ObservableBlock';\r\nimport ObservableBlockContainer from './ObservableBlockContainer';\r\nimport { Provider } from './FormContext';\r\nimport BreakpointForm from './BreakpointForm';\r\nimport useFPBStore, { FPBProps, Mode } from './useFPBStore';\r\nimport { toJS } from 'mobx';\r\nconst ResponsiveGridLayout = WidthProvider(Responsive);\r\nconst FPB: React.SFC<FPBProps> = React.memo(props => {\r\n  const breakpointFormRef = useRef<any>();\r\n  const store = useFPBStore(props);\r\n  if (props.forwardRef) {\r\n    props.forwardRef.current = store;\r\n  }\r\n  useEffect(() => {\r\n    if (props.defaultDatas) {\r\n      if (props.FPR) {\r\n        store.mode = Mode.PRIVIEW;\r\n      }\r\n      store.setDatas(props.defaultDatas.datas);\r\n      store.setBreakpointFromEntry(props.defaultDatas.breakpoints);\r\n      store.setLayouts([] as any, props.defaultDatas.layouts);\r\n      //模态框动画弹出需要加renderDelay\r\n      setTimeout(doWindowResize, props.renderDelay || 0);\r\n      // doWindowResize();\r\n    }\r\n  }, [props.defaultDatas, props.renderDelay]);\r\n  useEffect(() => {\r\n    console.log('mount');\r\n  }, []);\r\n  console.log('render', store);\r\n  const { FPR = false } = props;\r\n  const FPRPart = (\r\n    <Provider value={{ form: props.form }}>\r\n      <Observer>\r\n        {() => (\r\n          <ResponsiveGridLayout\r\n            // useCSSTransforms={false}\r\n            style={{ display: !store.hasLayout() ? 'none' : 'block' }}\r\n            className=\"layout\"\r\n            {...store.jsConfig}\r\n          >\r\n            {Object.entries(store.datas).map(([key, data]) => {\r\n              return (\r\n                <div key={key}>\r\n                  <Observer>\r\n                    {() =>\r\n                      store.mode === Mode.DESIGN && (\r\n                        <ObservableBlockContainer\r\n                          store={store}\r\n                          itemKey={key}\r\n                          data={data}\r\n                        />\r\n                      )\r\n                    }\r\n                  </Observer>\r\n\r\n                  <ObservableBlock\r\n                    store={store}\r\n                    i={key}\r\n                    components={props.components}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n          </ResponsiveGridLayout>\r\n        )}\r\n      </Observer>\r\n    </Provider>\r\n  );\r\n  if (FPR) {\r\n    return FPRPart;\r\n  }\r\n  return (\r\n    <>\r\n      {/* 此处在预览模式下取消transition */}\r\n      <Observer>\r\n        {() => (\r\n          <style>\r\n            {store.isPreview\r\n              ? `\r\n        .react-grid-item{\r\n          transition:none!important\r\n        }\r\n        .react-grid-layout{\r\n          transition:none!important\r\n        }\r\n        `\r\n              : null}\r\n          </style>\r\n        )}\r\n      </Observer>\r\n      <SplitPane\r\n        className=\"FPB\"\r\n        onDragFinished={doWindowResize}\r\n        paneStyle={{ position: `relative` }}\r\n        style={{ position: 'relative' }}\r\n        defaultSize={props.contentDefaultSize || `50%`}\r\n        minSize={479}\r\n        maxSize={1600}\r\n      >\r\n        <div style={{ position: `relative` }} key={'builder'}>\r\n          <Observer>\r\n            {() => (\r\n              <>\r\n                <Empty\r\n                  style={{ display: store.hasLayout() ? 'none' : 'block' }}\r\n                  description={'暂无元素'}\r\n                />\r\n                {FPRPart}\r\n              </>\r\n            )}\r\n          </Observer>\r\n        </div>\r\n        <div key=\"setting\">\r\n          <Observer>\r\n            {() => {\r\n              return (\r\n                <Drawer\r\n                  destroyOnClose\r\n                  title={store.editingItem && store.editingItem.i}\r\n                  placement=\"right\"\r\n                  width={`100%`}\r\n                  closable={store.isEditing}\r\n                  onClose={_ => store.setEditingItem(null)}\r\n                  visible={store.isEditing}\r\n                  getContainer={false}\r\n                  style={{ position: 'absolute' }}\r\n                  bodyStyle={{\r\n                    padding: 0,\r\n                    height: `calc( 100% - 54.6px )`,\r\n                    overflow: `auto`,\r\n                  }}\r\n                >\r\n                  {store.isEditing && (\r\n                    <ItemSettingForm\r\n                      initialKeyCounter={\r\n                        (store.editingItem &&\r\n                          getObjectKeysWhenIsArray(\r\n                            toJS(store.editingItem.componentProps, {\r\n                              recurseEverything: true,\r\n                            }) || {},\r\n                            'componentProps',\r\n                          )) ||\r\n                        {}\r\n                      }\r\n                      components={props.components}\r\n                      item={store.editingItem}\r\n                      onItemTypeChange={store.onItemTypeChange}\r\n                      onItemPropsChange={store.onItemPropsChange}\r\n                      componentGroup={store.componentGroup}\r\n                      flatComponents={store.flatComponents}\r\n                    />\r\n                  )}\r\n                </Drawer>\r\n              );\r\n            }}\r\n          </Observer>\r\n\r\n          <Form layout=\"inline\">\r\n            <Form.Item>\r\n              <Observer>\r\n                {() => (\r\n                  <Button\r\n                    type=\"primary\"\r\n                    icon=\"plus\"\r\n                    disabled={store.isPreview}\r\n                    onClick={store.createItem}\r\n                  >\r\n                    添加元素\r\n                  </Button>\r\n                )}\r\n              </Observer>\r\n            </Form.Item>\r\n            <Form.Item label=\"断点\">\r\n              <Observer>\r\n                {() => (\r\n                  <Button\r\n                    disabled={store.isPreview}\r\n                    onClick={_ => store.setBreakpointSettingVisible(true)}\r\n                  >\r\n                    断点\r\n                  </Button>\r\n                )}\r\n              </Observer>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button onClick={_ => console.log(JSON.stringify(store.config))}>\r\n                获取配置\r\n              </Button>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Observer>\r\n                {() => (\r\n                  <Radio.Group\r\n                    buttonStyle=\"solid\"\r\n                    onChange={store.changeMode}\r\n                    value={store.mode}\r\n                  >\r\n                    <Radio.Button value={Mode.DESIGN}>设计</Radio.Button>\r\n                    <Radio.Button value={Mode.PRIVIEW}>预览</Radio.Button>\r\n                  </Radio.Group>\r\n                )}\r\n              </Observer>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </SplitPane>\r\n      <Observer>\r\n        {() => (\r\n          <Modal\r\n            centered\r\n            destroyOnClose\r\n            maskClosable={false}\r\n            title={'设置断点'}\r\n            visible={store.breakpointSettingVisible}\r\n            onOk={_ =>\r\n              breakpointFormRef.current.validateFieldsAndScroll(\r\n                (err, values) => {\r\n                  if (err) {\r\n                    return;\r\n                  }\r\n                  store.setBreakpointConfig(values);\r\n                },\r\n              )\r\n            }\r\n            onCancel={_ => store.setBreakpointSettingVisible(false)}\r\n          >\r\n            <BreakpointForm\r\n              ref={breakpointFormRef}\r\n              initialData={store.breakpointsConfig}\r\n            />\r\n          </Modal>\r\n        )}\r\n      </Observer>\r\n    </>\r\n  );\r\n});\r\nconst FormFPB = Form.create<FPBProps>({ name: 'FPB' })(FPB);\r\nexport { FormFPB as default };\r\n"],"file":"FPB.js"}